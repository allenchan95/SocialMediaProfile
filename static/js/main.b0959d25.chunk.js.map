{"version":3,"sources":["component/SearchForm/SearchForm.module.css","component/Spinner/Spinner.module.css","component/ProfileDataForm/ProfileDataForm.module.css","component/PostForm/PostForm.module.css","component/Spinner/Spinner.js","store/action/auth.js","store/action/actionType.js","component/Nav/Nav.js","component/profileNav/profileNav.js","component/Content/ProfileCard/ProfileCard.js","component/Content/Projects/Project.js","component/Content/Content.js","component/Modal/Modal.js","component/Input/Input.js","utility.js","component/ProfileDataForm/ProfileDataForm.js","component/PostForm/PostForm.js","component/SearchForm/SearchForm.js","store/action/users.js","container/Profile/Profile.js","App.js","serviceWorker.js","store/reducer/auth.js","store/reducer/users.js","index.js","component/Input/Input.module.css"],"names":["module","exports","searchForm","cardList","card","Loader","load2","Button","spinner","react_default","a","createElement","className","classes","authSuccess","token","userId","type","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","connect","state","auth","isAuthenticated","loading","onLogout","actions","onAuth","email","password","isSignup","authData","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","error","props","appcontainer","nav","Spinner","onClick","onSearchClicked","children","component_Nav_Nav","onShowSearchFormClicked","showSearch","src","IconUrl","alt","onIconClick","onUpdateFormClick","onPostFormClick","profileCard","name","intro","location","href","website","target","rel","Project","title","content","date","Content","forElementsArray","key","posts","push","id","config","form","map","formElement","Content_Projects_Project","body","ProfileCard_ProfileCard","modal","style","show","closed","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","validationError","ValidationError","elementType","Object","assign","join","onChange","changed","elementConfig","value","options","option","displayValue","Label","label","updateObject","oldObject","updatedProerties","objectSpread","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","isImage","ProfileDataForm","_useState","useState","icon","placeholder","validation","valid","_useState2","slicedToArray","dataForm","setDataForm","_useState3","_useState4","formIsValid","setformIsValid","Input","event","inputIdentifier","updatedOrderForm","updatedFormElement","inputChangeHandler","console","log","updateForm","disabled","PostForm","Title","toLocaleString","searchField","user","users","robots","isPending","onSearchChange","payload","onRequestUsers","fetch","json","useEffect","filterRobots","filter","robot","username","toLowerCase","includes","i","onCardClicked","concat","Profile","showModal","Modalstyle","ProfileStyle","showUpdateForm","showIcon","showPostForm","userIconURL","userName","onShowModal","_this","setState","onCloseModal","onShowUpdateForm","onCloseUpdateForm","onShowIcon","onShowPostForm","onShowSearchForm","onSubmitForm","onSubmitNewPost","onUpdatePost","_this2","this","component_profileNav_profileNav","onNewPost","Modal_Modal","component_ProfileDataForm_ProfileDataForm","component_PostForm_PostForm","SearchForm","component_Content_Content","Component","requestPosts","updatePosts","App","onTryAutoSignin","container_Profile_Profile","getItem","Boolean","window","hostname","match","initialState","reducer","arguments","undefined","action","authStart","authFail","authLogout","intialStateRobot","requestRobots","newPosts","composeEnhancers","compose","rootReducer","combineReducers","authReducer","userReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,WAAA,+BAAAC,SAAA,6BAAAC,KAAA,mECAlBJ,EAAAC,QAAA,CAAkBI,OAAA,wBAAAC,MAAA,4CCAlBN,EAAAC,QAAA,CAAkBM,OAAA,qDCAlBP,EAAAC,QAAA,CAAkBM,OAAA,6YCOHC,EAJC,kBACZC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,QAAxB,gCCGSS,EAAc,SAACC,EAAMC,GACjC,MAAO,CACNC,KCT0B,eDU1BC,QAAUH,EACVC,OAAQA,IASGG,EAAS,WAIrB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACNJ,KCvBwB,gBD0BbK,EAAmB,SAACC,GAChC,OAAO,SAAAC,GACNC,WAAW,WACVD,EAASL,MACU,IAAjBI,KESUG,cAhBS,SAAAC,GACvB,MAAO,CACNZ,MAAQY,EAAMC,KAAKb,MACnBc,gBAAuC,OAArBF,EAAMC,KAAKb,MAC7BC,OAAQW,EAAMC,KAAKZ,OACnBc,QAASH,EAAMC,KAAKE,UAIK,SAAAN,GAC1B,MAAO,CACNO,SAAU,kBAAMP,EAASQ,MACzBC,OAAQ,SAACC,EAAMC,EAASC,GAAhB,OAA6BZ,EFDnB,SAACU,EAAMC,EAASC,GACnC,OAAO,SAAAZ,GACNA,EApCK,CACLP,KCJwB,eDwCxB,IAAMoB,EAAW,CAChBH,MAAMA,EACNC,SAASA,EACTG,mBAAmB,GAGhBC,EAAM,uHACNH,IACHG,EAAK,yHAEAC,IAAMC,KAAKF,EAAKF,GACXK,KAAK,SAAAC,GACF,IAAMC,EAAiB,IAAIC,MAAM,IAAIA,MAAOC,UAAsC,IAA1BH,EAASI,KAAKC,WACtE5B,aAAa6B,QAAQ,QAAQN,EAASI,KAAK7B,SAC3CE,aAAa6B,QAAQ,SAASN,EAASI,KAAKG,SAC5C9B,aAAa6B,QAAQ,iBAAiBL,GAGtCpB,EAASV,EAAY6B,EAASI,KAAK7B,QAASyB,EAASI,KAAKG,UAC7D1B,EAASF,EAAiBqB,EAASI,KAAKC,cAExCG,MAAM,SAAAC,GACH5B,EA9CR,CACNP,KCfuB,YDgBvBoC,MA4CgCD,EAAIT,SAASI,KAAKM,WExBJrB,CAAaE,EAAMC,EAASC,OAI7DV,CArCH,SAAC4B,GACb,OACO7C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0C,cACpB9C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ2C,KACvBF,EAAMxB,QAAQrB,EAAAC,EAAAC,cAAC8C,EAAD,MAAY,KAC3BhD,EAAAC,EAAAC,cAAA,UACC2C,EAAMzB,gBACLpB,EAAAC,EAAAC,cAAA,MAAI+C,QAAS,kBAAIJ,EAAMvB,aAAYtB,EAAAC,EAAAC,cAAA,uBAClCF,EAAAC,EAAAC,cAAA,MAAI+C,QAAS,kBAAIJ,EAAMrB,OAAO,cAAc,UAAS,KAAQxB,EAAAC,EAAAC,cAAA,sBAG9DF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAAS8C,QAASJ,EAAMK,iBAA1C,aAGJL,EAAMM,YCoBJlC,cARS,SAAAC,GACvB,MAAO,CAENE,gBAAuC,OAArBF,EAAMC,KAAKb,QAKQ,KAAxBW,CAnCI,SAAC4B,GAEpB,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAACkD,EAAD,CAAKjD,UAAU,MAAM+C,gBAAiBL,EAAMQ,0BAC1CrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEb0C,EAAMS,WAYI,KAXXtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOoD,IAAKV,EAAMW,QAASC,IAAI,OAAOR,QAASJ,EAAMa,eACpG1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACf0C,EAAMzB,gBACNpB,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAI+C,QAASJ,EAAMc,mBAAmB3D,EAAAC,EAAAC,cAAA,4BACtCF,EAAAC,EAAAC,cAAA,MAAI+C,QAASJ,EAAMe,iBAAiB5D,EAAAC,EAAAC,cAAA,uBAEnC,WCPC2D,SAZK,SAAChB,GACpB,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ0C,EAAMiB,MAC7B9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO0C,EAAMkB,OAC5B/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO0C,EAAMmB,UAC5BhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,KAAG+D,KAAMpB,EAAMqB,QAASC,OAAO,SAAUC,IAAI,uBAA7C,IAAqEvB,EAAMiB,OAChG9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,sBCMYkE,SAbC,SAACxB,GAChB,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,UAAK2C,EAAMyB,OACXtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,SAAI2C,EAAM0B,QAAV,KACAvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ0C,EAAM2B,KAA7B,SCoCYC,SAxCC,SAAC5B,GACZ,IAAM6B,EAAmB,GACvB,IAAK,IAAIC,KAAO9B,EAAM+B,MAClBF,EAAiBG,KAAK,CAClBC,GAAGH,EACHI,OAAQlC,EAAM+B,MAAMD,KAI5B,IAAIK,EACIhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACTuE,EAAiBO,IAAI,SAAAC,GAAW,OAC9BlF,EAAAC,EAAAC,cAACiF,EAAD,CACKR,IAAKO,EAAYJ,GACjBR,MAAOY,EAAYH,OAAOT,MAC1BC,QAASW,EAAYH,OAAOK,KAC5BZ,KAAMU,EAAYH,OAAOP,UAQpD,OACCxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAACmF,EAAD,CACAvB,KAAMjB,EAAMiB,KACZC,MAAOlB,EAAMkB,MACbC,SAAUnB,EAAMmB,SAChBE,QAASrB,EAAMqB,WAGfc,KCpBUM,SAbD,SAAAzC,GACZ,OACE7C,EAAAC,EAAAC,cAAA,WACMF,EAAAC,EAAAC,cAAA,OAAKC,UAAW0C,EAAM0C,OACpB1C,EAAMM,UAELN,EAAM2C,KAAOxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8C,QAASJ,EAAM4C,SAAa,+BCkCjEC,EA1CD,SAAC7C,GACd,IAAI8C,EAAe,KACbC,EAAe,CAACxF,IAAQyF,cAE1BhD,EAAMiD,SAAWjD,EAAMkD,gBAAkBlD,EAAMmD,SAClDJ,EAAaf,KAAKzE,IAAQ6F,SAE3B,IAAIC,EAAkB,KAKtB,OAJIrD,EAAMiD,SAAWjD,EAAMmD,UACvBE,EAAkBlG,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQ+F,iBAAtB,gCAGdtD,EAAMuD,aACb,IAAM,QACLT,EAAe3F,EAAAC,EAAAC,cAAA,QAAAmG,OAAAC,OAAA,CAAOnG,UAAWyF,EAAaW,KAAK,KAAMC,SAAU3D,EAAM4D,SAAY5D,EAAM6D,cAA5E,CAA2FC,MAAO9D,EAAM8D,SACvH,MACD,IAAM,WACLhB,EAAe3F,EAAAC,EAAAC,cAAA,WAAAmG,OAAAC,OAAA,CAAUnG,UAAWyF,EAAaW,KAAK,KAAMC,SAAU3D,EAAM4D,SAAa5D,EAAM6D,cAAhF,CAA+FC,MAAO9D,EAAM8D,SAC3H,MACD,IAAM,SACLhB,EACC3F,EAAAC,EAAAC,cAAA,UACCC,UAAWyF,EAAaW,KAAK,KAAOC,SAAU3D,EAAM4D,QACnDE,MAAO9D,EAAM8D,OACZ9D,EAAM6D,cAAcE,QAAQ3B,IAAI,SAAA4B,GAAM,OACtC7G,EAAAC,EAAAC,cAAA,UAAQyE,IAAKkC,EAAOF,MAAOA,MAAOE,EAAOF,OAAQE,EAAOC,iBAG5D,MACD,QACCnB,EAAe3F,EAAAC,EAAAC,cAAA,QAAAmG,OAAAC,OAAA,CAAOnG,UAAWyF,EAAaW,KAAK,KAAMC,SAAU3D,EAAM4D,SAAY5D,EAAM6D,cAA5E,CAA2FC,MAAO9D,EAAM8D,SAEzH,OACC3G,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQ2G,OAAQlE,EAAMmE,OACvCrB,EACAO,qBCvCSe,EAAe,SAACC,EAAWC,GACvC,OAAAd,OAAAe,EAAA,EAAAf,CAAA,GACIa,EACAC,IAKSE,EAAgB,SAACV,EAAOW,GAC9B,IAAIC,GAAU,EACd,IAAKD,EACD,OAAO,EAeX,GAZIA,EAAME,WACND,EAA2B,KAAjBZ,EAAMc,QAAiBF,GAGjCD,EAAMI,YACNH,EAAUZ,EAAMgB,QAAUL,EAAMI,WAAaH,GAG7CD,EAAMM,YACNL,EAAUZ,EAAMgB,QAAUL,EAAMM,WAAaL,GAG7CD,EAAMO,QAAS,CAEfN,EADgB,0IACEO,KAAKnB,IAAUY,EAGrC,GAAID,EAAMS,UAAW,CAEjBR,EADgB,QACEO,KAAKnB,IAAUY,EAErC,GAAGD,EAAMU,QAAS,CAEdT,EADgB,kBACEO,KAAKnB,IAAUY,EAGrC,OAAOA,GC4FAU,EAhIS,SAACpF,GAAU,IAAAqF,EACFC,mBAAS,CAC1BC,KAAM,CACLhC,YAAa,QACbM,cAAe,CACdlG,KAAM,OACN6H,YAAY,aAEb1B,MAAO9D,EAAMuF,KACbE,WAAY,CACXd,UAAU,EACVQ,SAAS,GAGVO,OAAO,EACPvC,SAAS,GAENlC,KAAM,CACNsC,YAAa,QACbM,cAAe,CACXlG,KAAM,OACN6H,YAAY,aAEhB1B,MAAO9D,EAAMiB,KACbwE,WAAY,CACRd,UAAU,EACVE,UAAU,GAGda,OAAO,EACPvC,SAAS,GAETjC,MAAO,CACPqC,YAAa,QACbM,cAAe,CACXlG,KAAM,OACN6H,YAAY,qBAEhB1B,MAAO9D,EAAMkB,MACbuE,WAAY,CACRd,UAAU,EACVI,UAAW,KAGfW,OAAO,EACPvC,SAAS,GAEbhC,SAAU,CACNoC,YAAa,QACbM,cAAe,CACXlG,KAAM,OACN6H,YAAY,iBAEhB1B,MAAO9D,EAAMmB,SACbsE,WAAY,CACRd,UAAU,GAGde,OAAO,EACPvC,SAAS,KA3DMwC,EAAAnC,OAAAoC,EAAA,EAAApC,CAAA6B,EAAA,GAC1BQ,EAD0BF,EAAA,GACjBG,EADiBH,EAAA,GAAAI,EA+DKT,oBAAS,GA/DdU,EAAAxC,OAAAoC,EAAA,EAAApC,CAAAuC,EAAA,GA+D1BE,EA/D0BD,EAAA,GA+DbE,EA/DaF,EAAA,GA8FrBnE,EAAmB,GACzB,IAAK,IAAIC,KAAO+D,EACZhE,EAAiBG,KAAK,CAClBC,GAAGH,EACHI,OAAQ2D,EAAS/D,KAIzB,IAAIK,EACIhF,EAAAC,EAAAC,cAAA,WACMwE,EAAiBO,IAAI,SAAAC,GAAW,OAC7BlF,EAAAC,EAAAC,cAAC8I,EAAD,CACIhC,MAAO9B,EAAYJ,GACnBH,IAAKO,EAAYJ,GACjBsB,YAAalB,EAAYH,OAAOqB,YAChCM,cAAexB,EAAYH,OAAO2B,cAClCC,MAAOzB,EAAYH,OAAO4B,MAAOzB,EAAYH,OAAO4B,MAAQ,GAC5Db,SAAUZ,EAAYH,OAAOwD,MAC7BxC,eAAgBb,EAAYH,OAAOuD,WACnCtC,QAASd,EAAYH,OAAOiB,QAC5BS,QAAS,SAACwC,GAAD,OAjDV,SAACA,EAAOC,GAClC,IAAMC,EAAgB9C,OAAAe,EAAA,EAAAf,CAAA,GAClBqC,GAEEU,EAAkB/C,OAAAe,EAAA,EAAAf,CAAA,GACpB8C,EAAiBD,IAErBE,EAAmBzC,MAAQsC,EAAM9E,OAAOwC,MAClCyC,EAAmBpD,SAAU,EACnCmD,EAAiBD,GAAmBE,EACpCA,EAAmBb,MAAQlB,EAAc+B,EAAmBzC,MAAOyC,EAAmBd,YAEtF,IAAIQ,GAAc,EAClB,IAAK,IAAII,KAAmBC,EACfA,EAAiBD,GAAiBvC,QACjCwC,EAAiBD,GAAiBX,MAAQlB,EAAc8B,EAAiBD,GAAiBvC,MAAOwC,EAAiBD,GAAiBZ,aAEhJQ,EAAcK,EAAiBD,GAAiBX,OAASO,EAE1DC,EAAeD,GACfH,EAAYQ,GA6BmCE,CAAmBJ,EAAM/D,EAAYJ,SAGhE9E,EAAAC,EAAAC,cAAA,UAASC,UAAWC,IAAQN,OAAQmD,QA7BpC,WACpBqG,QAAQC,IAAI,UACZ1G,EAAM2G,WAAWd,EAAQ,KAAS/B,MAAM+B,EAAQ,KAAS/B,MAAM+B,EAAQ,MAAU/B,MAAM+B,EAAQ,SAAa/B,OACtG9D,EAAM4C,UA0BmEgE,UAAWX,GAAtE,WAGd,OACL9I,EAAAC,EAAAC,cAAA,WACE8E,qBC7BU0E,EA7FE,SAAC7G,GAAU,IAAAqF,EACGC,mBAAS,CACxBwB,MAAO,CACNvD,YAAa,QACbM,cAAe,CACdlG,KAAM,OACN6H,YAAY,cAEb1B,MAAO9D,EAAMuF,KACbE,WAAY,CACXd,UAAU,GAEXe,OAAO,EACPvC,SAAS,GAEVvB,QAAS,CACL2B,YAAa,QACbM,cAAe,CACXlG,KAAM,WACN6H,YAAY,gBAEhB1B,MAAO9D,EAAMiB,KACbwE,WAAY,CACRd,UAAU,EACVI,UAAW,KAEfW,OAAO,EACPvC,SAAS,KA3BDwC,EAAAnC,OAAAoC,EAAA,EAAApC,CAAA6B,EAAA,GACrBQ,EADqBF,EAAA,GACZG,EADYH,EAAA,GAAAI,EA8BUT,oBAAS,GA9BnBU,EAAAxC,OAAAoC,EAAA,EAAApC,CAAAuC,EAAA,GA8BrBE,EA9BqBD,EAAA,GA8BRE,EA9BQF,EAAA,GA4DdnE,EAAmB,GACzB,IAAK,IAAIC,KAAO+D,EACZhE,EAAiBG,KAAK,CAClBC,GAAGH,EACHI,OAAQ2D,EAAS/D,KAIzB,IAAIK,EACIhF,EAAAC,EAAAC,cAAA,WACMwE,EAAiBO,IAAI,SAAAC,GAAW,OAC7BlF,EAAAC,EAAAC,cAAC8I,EAAD,CACIhC,MAAO9B,EAAYJ,GACnBH,IAAKO,EAAYJ,GACjBsB,YAAalB,EAAYH,OAAOqB,YAChCM,cAAexB,EAAYH,OAAO2B,cAClCC,MAAOzB,EAAYH,OAAO4B,MAAOzB,EAAYH,OAAO4B,MAAQ,GAC5Db,SAAUZ,EAAYH,OAAOwD,MAC7BxC,eAAgBb,EAAYH,OAAOuD,WACnCtC,QAASd,EAAYH,OAAOiB,QAC5BS,QAAS,SAACwC,GAAD,OAjDV,SAACA,EAAOC,GAClC,IAAMC,EAAgB9C,OAAAe,EAAA,EAAAf,CAAA,GAClBqC,GAEEU,EAAkB/C,OAAAe,EAAA,EAAAf,CAAA,GACpB8C,EAAiBD,IAErBE,EAAmBzC,MAAQsC,EAAM9E,OAAOwC,MAClCyC,EAAmBpD,SAAU,EACnCmD,EAAiBD,GAAmBE,EACpCA,EAAmBb,MAAQlB,EAAc+B,EAAmBzC,MAAOyC,EAAmBd,YAEtF,IAAIQ,GAAc,EAClB,IAAK,IAAII,KAAmBC,EACfA,EAAiBD,GAAiBvC,QACjCwC,EAAiBD,GAAiBX,MAAQlB,EAAc8B,EAAiBD,GAAiBvC,MAAOwC,EAAiBD,GAAiBZ,aAEhJQ,EAAcK,EAAiBD,GAAiBX,OAASO,EAE1DC,EAAeD,GACfH,EAAYQ,GA6BmCE,CAAmBJ,EAAM/D,EAAYJ,SAGhE9E,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQN,OAAQmD,QA7BnC,WACpBqG,QAAQC,IAAI,UACZ1G,EAAM2G,WAAWd,EAAQ,MAAU/B,MAAM+B,EAAQ,QAAY/B,OAAO,IAAIvE,MAAOwH,kBACzE/G,EAAM4C,UA0BkEgE,UAAWX,GAArE,WAGrB,OACE9I,EAAAC,EAAAC,cAAA,WACE8E,qBC5BU/D,cAhBS,SAACC,GACvB,MAAO,CACL2I,YAAa3I,EAAM4I,KAAKD,YACxBE,MAAO7I,EAAM4I,KAAKE,OAClBC,UAAW/I,EAAM4I,KAAKG,UACtBrH,MAAO1B,EAAM4I,KAAKlH,QAIK,SAAC7B,GAC1B,MAAO,CACLmJ,eAAgB,SAACjB,GAAD,OAAWlI,EChDS,CACvCP,KZIkC,sBYHlC2J,QD8CsDlB,EAAM9E,OAAOwC,SAChEyD,eAAgB,kBAAMrJ,EC5CQ,SAACA,GAClCA,EAAS,CAAEP,KZZyB,0BYapC6J,MAAM,8CACJpI,KAAK,SAAAC,GAAQ,OAAIA,EAASoI,SAC1BrI,KAAK,SAAAK,GAAI,OAAIvB,EAAS,CAAEP,KZdU,wBYcmB2J,QAAS7H,MAC9DI,MAAM,SAAAE,GAAK,OAAG7B,EAAS,CAACP,KZdS,uBYckB2J,QAAQvH,WD2C/C3B,CA5DI,SAAC4B,GAGpB0H,oBAAU,WACR1H,EAAMuH,kBAEN,IACF,IAAMI,EAAgB3H,EAAMkH,MAAMU,OAAO,SAAAC,GACnC,OAAOA,EAAMC,SAASC,cAAcC,SAAShI,EAAMgH,YAAYe,iBAErEtB,QAAQC,IAAIiB,GAEZ,IAAMxF,EAAMhF,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQV,UAEpB8K,EAAavF,IAAI,SAAC6E,EAAKgB,GACrB,OAEE9K,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQT,KACrBgF,IAAKmG,EACN7H,QAAS,kBAAIJ,EAAMkI,cAAcP,EAAaM,GAAGH,SAASH,EAAaM,GAAGhH,KAAK0G,EAAaM,GAAGrJ,MAAM+I,EAAaM,GAAGhG,MAGtH9E,EAAAC,EAAAC,cAAA,OAAKqD,IAAG,wBAAAyH,OAA4BR,EAAaM,GAAGH,UAAYlH,IAAI,WACpEzD,EAAAC,EAAAC,cAAA,WACCsK,EAAaM,GAAGH,cAS9B,OACC3K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,YACvBO,EAAAC,EAAAC,cAAA,SAAOM,KAAK,OAAOmG,MAAO9D,EAAMgH,YAAaxB,YAAY,WAAW7B,SAAU,SAACyC,GAAD,OAASpG,EAAMqH,eAAejB,OAEzGjE,KE/BCiG,6MACL/J,MAAQ,CAEPgK,WAAW,EACXC,WAAa,oBACbC,aAAc,sBACdC,gBAAgB,EAChBC,UAAS,EACTC,cAAa,EACb3G,MAAM,GACNtB,YAAW,EACXkI,YAAe,gFACfC,SAAW,GACX1H,MAAO,GACPC,SAAU,GACVE,QAAS,kDAKVwH,YAAc,WACbC,EAAKC,SAAU,CAACV,WAAWS,EAAKzK,MAAMgK,UAAWC,WAAa,uBAE/DU,aAAe,WACdF,EAAKC,SAAU,CAACV,WAAU,EAAQC,WAAa,oBAAqBE,gBAAe,EAAOC,UAAS,EAAMC,cAAa,OAEvHO,iBAAmB,WAClBH,EAAKC,SAALvF,OAAAe,EAAA,EAAAf,CAAA,GAAkBsF,EAAKzK,MAAvB,CAA6BmK,gBAAe,EAAKH,WAAWS,EAAKzK,MAAMgK,UAAWC,WAAa,wBAEhGY,kBAAoB,WACnBJ,EAAKC,SAALvF,OAAAe,EAAA,EAAAf,CAAA,GAAkBsF,EAAKzK,MAAvB,CAA6BmK,gBAAe,EAAMH,WAAWS,EAAKzK,MAAMgK,UAAWC,WAAa,wBAEjGa,WAAa,WACZL,EAAKC,SAALvF,OAAAe,EAAA,EAAAf,CAAA,GAAkBsF,EAAKzK,MAAvB,CAA6BoK,UAAS,EAAKJ,WAAWS,EAAKzK,MAAMgK,UAAWC,WAAa,wBAE1Fc,eAAiB,WAChB3C,QAAQC,IAAI,qBACZoC,EAAKC,SAALvF,OAAAe,EAAA,EAAAf,CAAA,GAAkBsF,EAAKzK,MAAvB,CAA6BoK,UAAS,EAAMJ,WAAWS,EAAKzK,MAAMgK,UAAWC,WAAa,kBAAkBI,cAAa,QAE1HW,iBAAmB,WAClB5C,QAAQC,IAAI,uBACZoC,EAAKC,SAALvF,OAAAe,EAAA,EAAAf,CAAA,GAAkBsF,EAAKzK,MAAvB,CAA6BoK,UAAS,EAAMJ,WAAU,EAAMK,cAAa,EAAMjI,YAAW,EAAM6H,WAAa,0BAG9GgB,aAAe,SAACrK,EAAIgC,EAAKC,EAAMC,GAC9BsF,QAAQC,IAAIzH,GACZ6J,EAAKC,SAALvF,OAAAe,EAAA,EAAAf,CAAA,GACIsF,EAAKzK,MADT,CAECsK,YAAa1J,EACb2J,SAAS3H,EACTC,MAAMA,EACNC,SAASA,QAGXoI,gBAAkB,SAAC9H,EAAMC,EAAQC,GAChCmH,EAAK9I,MAAMwJ,aAAa,CAAC/H,MAAMA,EAAMc,KAAKb,EAAQC,KAAKA,OAOxDuG,cAAgB,SAACjH,EAAKC,EAAMC,EAASc,GACpC6G,EAAKC,SAALvF,OAAAe,EAAA,EAAAf,CAAA,GACIsF,EAAKzK,MADT,CAECuK,SAAS3H,EACTC,MAAMA,EACNyH,YAAW,wBAAAR,OAAyBlH,GACpCE,SAASA,EACTV,YAAW,KAEZqI,EAAK9I,MAAMuH,eAAetF,4EAMjB,IAAAwH,EAAAC,KAGP,OACEvM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACsM,EAAD,CAAalJ,WAAYiJ,KAAKrL,MAAMoC,WAAYD,wBAAyBkJ,KAAKL,iBAAkBtI,gBAAiB2I,KAAKN,eAAgBtI,kBAAmB4I,KAAKT,iBAAkBtI,QAAS+I,KAAKrL,MAAMsK,YAAa9H,YAAa6I,KAAKP,WAAaS,UAAWF,KAAKH,kBAChQpM,EAAAC,EAAAC,cAACwM,EAAD,CAAOlH,KAAM+G,KAAKrL,MAAMgK,UAAW3F,MAAOgH,KAAKrL,MAAMiK,WAAY1F,OAAQ,kBAAI6G,EAAKT,iBAC9EU,KAAKrL,MAAMmK,eAAiBrL,EAAAC,EAAAC,cAACyM,EAAD,CAAWnD,WAAY+C,KAAKJ,aAAc/D,KAAMmE,KAAKrL,MAAMsK,YAAa1H,KAAMyI,KAAKrL,MAAMuK,SAAU1H,MAAOwI,KAAKrL,MAAM6C,MAAQC,SAAWuI,KAAKrL,MAAM8C,SAAUE,QAASqI,KAAKrL,MAAMgD,QAAUuB,OAAQ,kBAAI6G,EAAKT,kBAAoB,KAE7PU,KAAKrL,MAAMoK,SAAWtL,EAAAC,EAAAC,cAAA,OAAKqD,IAAKgJ,KAAKrL,MAAMsK,YAAa/H,IAAI,SAAU,KACtE8I,KAAKrL,MAAMqK,aAAevL,EAAAC,EAAAC,cAAC0M,EAAD,CAAUpD,WAAY+C,KAAKH,gBAAkB3G,OAAQ,kBAAI6G,EAAKT,kBAAmB,MAE5GU,KAAKrL,MAAMoC,WAAYtD,EAAAC,EAAAC,cAAC2M,EAAD,CAAY9B,cAAewB,KAAKxB,gBAAoB/K,EAAAC,EAAAC,cAAC4M,EAAD,CAAShJ,KAAMyI,KAAKrL,MAAMuK,SAAU1H,MAAOwI,KAAKrL,MAAM6C,MAAQC,SAAWuI,KAAKrL,MAAM8C,SAAUE,QAASqI,KAAKrL,MAAMgD,QAASU,MAAO2H,KAAK1J,MAAM+B,gBAzF9MmI,aA+GP9L,cAfS,SAACC,GACvB,MAAO,CACL0D,MAAO1D,EAAM4I,KAAKlF,MAClBqF,UAAW/I,EAAM4I,KAAKG,UACtBrH,MAAO1B,EAAM4I,KAAKlH,QAIK,SAAC7B,GAC1B,MAAO,CACLqJ,eAAgB,SAACtF,GAAD,OAAQ/D,ED9FA,SAAC+D,GAAD,OAAQ,SAAC/D,GACpCA,EAAS,CAAEP,KZhByB,0BYiBpC6J,MAAK,qDAAAW,OAAsDlG,IACzD7C,KAAK,SAAAC,GAAQ,OAAIA,EAASoI,SAC1BrI,KAAK,SAAAK,GAAI,OAAIvB,EAAS,CAAEP,KZlBU,wBYkBmB2J,QAAS7H,MAC9DI,MAAM,SAAAE,GAAK,OAAG7B,EAAS,CAACP,KZlBS,uBYkBkB2J,QAAQvH,OCyFzBoK,CAAalI,KAC9CuH,aAAe,SAACrK,GAAD,OAAUjB,EDtFF,SAACiB,GAAD,OAAU,SAACjB,GACrCA,EAAS,CAACP,KZrBiB,eYqBG2J,QAASnI,KCqFFiL,CAAYjL,OAInCf,CAA4CgK,GCrHrDiC,8LAEJX,KAAK1J,MAAMsK,mDAGT,OACEnN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACkN,EAAD,cAPWL,aAiBH9L,cAAQ,KALI,SAAAF,GACzB,MAAM,CACJoM,gBAAiB,kBAAMpM,EfmDnB,SAAAA,GACN,IAAMT,EAAQK,aAAa0M,QAAQ,SACnC,GAAK/M,EAEA,CACJ,IAAM6B,EAAiB,IAAIC,KAAMzB,aAAa0M,QAAQ,mBACtD,GAAIlL,GAAkB,IAAIC,KACzBrB,EAASL,SACL,CACJ,IAAMH,EAASI,aAAa0M,QAAQ,UACpCtM,EAASV,EAAYC,EAAMC,IAC3BQ,EAASF,GAAmBsB,EAAeE,WAAW,IAAID,MAAOC,WAAY,YAR9EtB,EAASL,UenDGO,CAAiCiM,GCX5BI,QACW,cAA7BC,OAAOvJ,SAASwJ,UAEe,UAA7BD,OAAOvJ,SAASwJ,UAEhBD,OAAOvJ,SAASwJ,SAASC,MACvB,8EChBAC,EAAe,CACpBpN,MAAO,KACPC,OAAS,KACTqC,MAAO,KACPnB,MAAM,KACNqC,KAAK,KACLzC,SAAQ,GAiDMsM,EAVC,WAAiC,IAAhCzM,EAAgC0M,UAAAjG,OAAA,QAAAkG,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,EAAcI,EAAWF,UAAAjG,OAAA,EAAAiG,UAAA,QAAAC,EAChD,OAAQC,EAAOtN,MACd,IhBjDwB,agBiDK,OAtCb,SAACU,EAAM4M,GACxB,OAAO7G,EAAa/F,EAAM,CAC1BZ,MAAO,KACPC,OAAS,KACTqC,MAAO,KACPnB,MAAM,KACNqC,KAAK,KACFzC,SAAQ,IA+B0B0M,CAAU7M,GAC9C,IhBjD0B,egBiDK,OA7Bb,SAACA,EAAM4M,GAC1B,OAAO7G,EAAa/F,EAAM,CACzBZ,MAAOwN,EAAOrN,QACdF,OAAOuN,EAAOvN,OACdqC,MAAM,KACNvB,SAAQ,IAwB8BhB,CAAYa,EAAM4M,GACxD,IhBjDuB,YgBiDM,OApBd,SAAC5M,EAAM4M,GACvB,OAAO7G,EAAa/F,EAAM,CACzB0B,MAAQkL,EAAOlL,MACfvB,SAAQ,IAiB4B2M,CAAS9M,EAAM4M,GACnD,IhBjDwB,cgBiDO,OAfd,SAAC5M,EAAM4M,GACzB,OAAO7G,EAAa/F,EAAM,CACzBZ,MAAO,KACPC,OAAS,KACTqC,MAAO,KACPnB,MAAM,KACNqC,KAAK,OASiCmK,CAAW/M,GACjD,QACC,OAAOA,IC3CJgN,EAAmB,CACvBjE,WAAY,EACZD,OAAS,GACTpH,MAAQ,GACRiH,YAAa,GACbjF,MAAQ,IAkCKuJ,GA7BO,WAAqC,IAApCjN,EAAoC0M,UAAAjG,OAAA,QAAAkG,IAAAD,UAAA,GAAAA,UAAA,GAA9BM,EAAiBJ,EAAaF,UAAAjG,OAAA,QAAAkG,IAAAD,UAAA,GAAAA,UAAA,GAAN,GACpD,OAAOE,EAAOtN,MACb,IjBlBmC,wBiBmBlC,OAAO6F,OAAOC,OAAO,GAAGpF,EAAM,CAAC+I,WAAW,IAC3C,IjBnBmC,wBiBoBlC,OAAO5D,OAAOC,OAAO,GAAGpF,EAAM,CAAC8I,OAAQ8D,EAAO3D,QAASF,WAAW,IACnE,IjBpBkC,uBiBqBjC,OAAO5D,OAAOC,OAAO,GAAGpF,EAAM,CAAC0B,MAAOkL,EAAO3D,QAASF,WAAW,IAClE,IjBpBmC,wBiBqBlC,OAAO5D,OAAOC,OAAO,GAAGpF,EAAM,CAAC0D,MAAM,GAAKqF,WAAW,IACtD,IjBrBmC,wBiBsBlC,OAAO5D,OAAOC,OAAO,GAAGpF,EAAM,CAAC0D,MAAOkJ,EAAO3D,QAASF,WAAW,IAClE,IjBtBkC,uBiBuBjC,OAAO5D,OAAOC,OAAO,GAAGpF,EAAM,CAAC0B,MAAOkL,EAAO3D,QAASF,WAAW,IAClE,IjBnBiC,sBiBoBhC,OAAO5D,OAAOC,OAAO,GAAIpF,EAAO,CAAC2I,YAAYiE,EAAO3D,UACrD,IjBxB0B,eiB0BxB,IAAMiE,EAAWlN,EAAM0D,MAEvB,OADAwJ,EAASvJ,KAAKiJ,EAAO3D,SACd9D,OAAOC,OAAO,GAAGpF,EAAM,CAAC0D,MAAOwJ,EAAUnE,WAAW,IAG7D,QACC,OAAO/I,IC9BJmN,GAAgHC,IAChHC,GAAaC,YAAgB,CAClCrN,KAAOsN,EACP3E,KAAO4E,KAEFC,GAAQC,YAAYL,GACzBF,GACCQ,YAAgBC,OAGZC,GACL/O,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAUL,MAAOA,IACd3O,EAAAC,EAAAC,cAAC+O,EAAD,OAIJC,IAASC,OAAOJ,GAAKK,SAASC,eAAe,SHkGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvN,KAAK,SAAAwN,GACjCA,EAAaC,kCIlInBnQ,EAAAC,QAAA,CAAkBwJ,MAAA,qBAAAjC,MAAA,qBAAAlB,aAAA,4BAAAI,QAAA,uBAAAE,gBAAA","file":"static/js/main.b0959d25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__2LIzA\",\"cardList\":\"SearchForm_cardList__1sGSd\",\"card\":\"SearchForm_card__KaDoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__29jS-\",\"load2\":\"Spinner_load2__drFiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ProfileDataForm_Button__X6vC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"PostForm_Button__MQ79L\"};","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import * as actionTypes from './actionType';\r\nimport axios from 'axios';\r\nexport const authStart = () => {\r\n\treturn{\r\n\t\ttype: actionTypes.AUTH_START\r\n\t}\r\n}\r\n\r\nexport const authSuccess = (token,userId) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_SUCCESS,\r\n\t\tidToken : token,\r\n\t\tuserId :userId\r\n\t}\r\n}\r\nexport const authFail = (error) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_FAIL,\r\n\t\terror : error\r\n\t}\r\n}\r\nexport const logout = () => {\r\n\tlocalStorage.removeItem('token');\r\n\tlocalStorage.removeItem('userId');\r\n\tlocalStorage.removeItem('expirationDate');\r\n\treturn {\r\n\t\ttype : actionTypes.AUTH_LOGOUT\r\n\t}\r\n }\r\nexport const checkAuthTimeout = (expirationTime) =>{\r\n\treturn dispatch =>\t{\r\n\t\tsetTimeout(()=>{\r\n\t\t\tdispatch(logout());\r\n\t\t}, expirationTime * 1000)\r\n\t}\r\n}\r\n\r\nexport const auth = (email,password,isSignup) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(authStart());\r\n\t\tconst authData = {\r\n\t\t\temail:email,\r\n\t\t\tpassword:password,\r\n\t\t\treturnSecureToken :true,\r\n\t\t\t \r\n\t\t}\r\n\t\tlet url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAXrU6Nlxlu3jibtiCMZQ8EpvVWZGzmC3w';\r\n\t\tif(!isSignup){\r\n\t\t\turl ='https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAXrU6Nlxlu3jibtiCMZQ8EpvVWZGzmC3w'\r\n\t\t}\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date (new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token',response.data.idToken);\r\n                localStorage.setItem('userId',response.data.localId);\r\n                localStorage.setItem('expirationDate',expirationDate);\r\n               \r\n  \t\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            \tdispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\nexport const authCheckState = () =>{\r\n\treturn dispatch =>{\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tif (!token){\r\n\t\t\tdispatch(logout());\r\n\t\t}else{\r\n\t\t\tconst expirationDate = new Date( localStorage.getItem('expirationDate'));\r\n\t\t\tif (expirationDate <= new Date()){\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t}else{   \t\r\n\t\t\t\tconst userId = localStorage.getItem('userId');\r\n\t\t\t\tdispatch(authSuccess(token,userId))\r\n\t\t\t\tdispatch(checkAuthTimeout( (expirationDate.getTime()- new Date().getTime() )/1000 ));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n}","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT ='AUTH_LOGOUT';\r\n\r\nexport const REQUEST_USERS_PENDING = 'REQUEST_USERS_PENDING';\r\nexport const REQUEST_USERS_SUCCESS = 'REQUEST_USERS_SUCCESS';\r\nexport const REQUEST_USERS_FAILED = 'REQUEST_USERS_FAILED';\r\n\r\nexport const REQUEST_POSTS_PENDING = 'REQUEST_POSTS_PENDING';\r\nexport const REQUEST_POSTS_SUCCESS = 'REQUEST_POSTS_SUCCESS';\r\nexport const REQUEST_POSTS_FAILED = 'REQUEST_POSTS_FAILED';\r\n\r\nexport const UPDATE_POSTS = 'UPDATE_POSTS';\r\n\r\n\r\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","import React from 'react';\r\nimport classes from './Nav.css';\r\nimport Spinner from '../../component/Spinner/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/action/index';\r\nconst Nav = (props) => {\r\nreturn (\r\n\t     \t<div className={classes.appcontainer}>\r\n\t          <div className={classes.nav}>\r\n\t          {props.loading?<Spinner />:null}\r\n\t          <ul>\r\n\t          {props.isAuthenticated? \r\n\t          \t\t<li onClick={()=>props.onLogout()}><div>SIGNOUT</div></li>\r\n\t          \t: <li onClick={()=>props.onAuth('a@gmail.com','123123',false)}><div>SIGNIN</div></li>\r\n\t          }\r\n\t          \t\r\n\t           \t<li><button className='button' onClick={props.onSearchClicked}>Search</button></li>\r\n\t          </ul>\r\n\t          </div>\r\n\t        \t  {props.children}\r\n\t\t\t </div>\r\n\t    \r\n\r\n      );\r\n }\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttoken : state.auth.token,\r\n\t\tisAuthenticated : state.auth.token !== null,\r\n\t\tuserId :state.auth.userId,\r\n\t\tloading :state.auth.loading\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonLogout: () => dispatch(actions.logout()),\r\n\t\tonAuth: (email,password,isSignup) => dispatch(actions.auth(email,password,isSignup))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Nav);","import React from 'react';\r\nimport './profileNav.css';\r\nimport {connect} from 'react-redux';\r\nimport Nav from '../Nav/Nav';\r\nconst profileNav = (props) => {\r\n\r\nreturn (\r\n\t<div className='app-container'>\r\n\t <div className='container'>\r\n\t\t<Nav className='Nav' onSearchClicked={props.onShowSearchFormClicked}/>\r\n\t\t  <div className='bg' > \r\n\t\t  </div>\r\n\t\t \t{!props.showSearch?\r\n\t\t\t \t<nav className='nav' >\r\n\t\t\t          <div className='icon-container'><img className='icon' src={props.IconUrl} alt='icon' onClick={props.onIconClick}/></div>\r\n\t\t\t          <div className='profileNav'>\r\n\t\t          {props.isAuthenticated? \r\n\t\t          \t<ul>\r\n\t\t\t           <li onClick={props.onUpdateFormClick}><p>UPDATE PROFILE</p></li>\r\n\t\t\t           <li onClick={props.onPostFormClick}><p>NEW POST</p></li>\r\n\t\t            </ul>\r\n\t\t            :null\r\n\t          \t}\r\n\t          </div>\r\n\t        </nav>:null}\r\n\r\n        </div>\r\n    </div>\r\n\r\n      );\r\n }\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\t\r\n\t\tisAuthenticated : state.auth.token !== null,\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(profileNav);","import React from 'react';\r\nimport './ProfileCard.css';\r\n const profileCard = (props) => {\r\n \treturn(\r\n \t\t<div className='card'>\r\n \t\t\t<div className='name'>{props.name}</div>\r\n \t\t\t<div className=\"tag\">{props.intro}</div>\r\n \t\t\t<div className=\"tag\">{props.location}</div>\r\n \t\t\t<div className=\"tag\"><a href={props.website} target='_blank'  rel=\"noopener noreferrer\">@{props.name}</a></div>\r\n \t\t\t<div className=\"tag\">Joined May 2009</div>\r\n \t\t</div>\r\n \t\t)\r\n }\r\n\r\n export default profileCard;","import React from 'react';\r\nimport './Project.css';\r\n const Project = (props) => {\r\n \treturn(\r\n \t\t<div className='Project'>\r\n \t\t\t<h1>{props.title}</h1>\r\n \t\t\t<div className='content-body'>\r\n \t\t\t<p>{props.content} </p>\r\n \t\t\t<div className='date'>{props.date} </div>\r\n \t\t\t</div>\r\n \t\t</div>\r\n \t\r\n \t\t)\r\n }\r\n\r\n export default Project;","import React from 'react';\r\nimport ProfileCard from './ProfileCard/ProfileCard';\r\nimport Projects from './Projects/Project';\r\nimport './Content.css';\r\n const Content = (props) => {\r\n \t    const forElementsArray = [];\r\n        for (let key in props.posts) {\r\n            forElementsArray.push({\r\n                id:key,\r\n                config: props.posts[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n                <div className='item2'>\r\n                     {forElementsArray.map(formElement => (\r\n                        <Projects\r\n                             key={formElement.id}\r\n                             title={formElement.config.title}\r\n                             content={formElement.config.body}\r\n                             date={formElement.config.date}\r\n                            />\r\n                         ))}\r\n                  \r\n                </div>\r\n            ) ;\r\n\r\n\r\n \treturn(\r\n \t\t<div className='grid-container'>\r\n \t\t\t<div className='item1'>\r\n\t \t\t\t<ProfileCard \r\n\t \t\t\tname={props.name} \r\n\t \t\t\tintro={props.intro}\r\n\t \t\t\tlocation={props.location}\r\n\t \t\t\twebsite={props.website} \r\n\t \t\t\t/>\r\n \t\t\t</div>\r\n \t\t\t{form}\r\n \r\n \t\t</div>\r\n \t\t)\r\n }\r\n\r\n export default Content;","import React from \"react\";\r\nimport  \"./Modal.css\";\r\n\r\n\r\n\r\nconst modal = props => {\r\n  return (\r\n    <div >\r\n          <div className={props.style}>\r\n           {props.children }\r\n          </div>\r\n            {props.show ? <div className=\"Backdrop\" onClick={props.closed} /> : null\r\n            }\r\n         \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default modal;\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\nconst input = (props) => {\r\n\tlet inputElement = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t}\r\n\tlet validationError = null;\r\n\tif (props.invalid && props.touched) {\r\n\t    validationError = <p className={classes.ValidationError} >Please enter a valid value!</p>;\r\n\t}\r\n\r\n\tswitch (props.elementType){\r\n\t\tcase ('input'):\r\n\t\t\tinputElement = <input className={inputClasses.join(' ')} onChange={props.changed}{...props.elementConfig} value={props.value}/>;\r\n\t\t\tbreak;\r\n\t\tcase ('textarea'):\r\n\t\t\tinputElement = <textarea className={inputClasses.join(' ')} onChange={props.changed} {...props.elementConfig} value={props.value} />;\r\n\t\t\tbreak;\r\n\t\tcase ('select'):\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select \r\n\t\t\t\t\tclassName={inputClasses.join(' ')}  onChange={props.changed}\r\n\t\t\t \t\tvalue={props.value}>\r\n\t\t\t \t\t{props.elementConfig.options.map(option => (\r\n\t\t\t \t\t\t<option key={option.value} value={option.value}>{option.displayValue}</option>\r\n\t\t\t \t\t\t))}\r\n\t\t\t\t</select>);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = <input className={inputClasses.join(' ')} onChange={props.changed}{...props.elementConfig} value={props.value} />;\r\n\t}\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<label className={classes.Label}>{props.label}</label>\r\n\t\t\t{inputElement}\r\n\t\t\t{validationError}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default input;","export const updateObject = (oldObject, updatedProerties) => {\r\n\treturn{\r\n\t\t...oldObject,\r\n\t\t...updatedProerties\r\n\t}\r\n}\r\n\r\n\r\nexport const  checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isImage) {\r\n            const pattern = /\\.(jpg|png|gif)/ ;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n","import React,{useState} from 'react';\r\nimport Input from '../Input/Input';\r\nimport classes from './ProfileDataForm.module.css';\r\nimport {checkValidity} from '../../utility';\r\nconst ProfileDataForm = (props) => {\r\n  const [dataForm,setDataForm] = useState({\r\n                icon: {\r\n                \telementType: 'input',\r\n                \telementConfig: {\r\n                \t\ttype: 'text',\r\n                \t\tplaceholder:\"Your Icon\"\r\n                \t},\r\n                \tvalue: props.icon,\r\n                \tvalidation: {\r\n                \t\trequired: true,\r\n                \t\tisImage: false\r\n                       \r\n                \t},\r\n                \tvalid: false,\r\n                \ttouched: false\r\n                },\r\n                    name: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:\"Your Name\"\r\n                    },\r\n                    value: props.name,\r\n                    validation: {\r\n                        required: true,\r\n                        minLength:4\r\n                       \r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                    intro: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:\"Your Introduction\"\r\n                    },\r\n                    value: props.intro,\r\n                    validation: {\r\n                        required: true,\r\n                        maxLength: 100\r\n                       \r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                location: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:\"Your Location\"\r\n                    },\r\n                    value: props.location,\r\n                    validation: {\r\n                        required: true\r\n                       \r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n\r\n\t\t});\r\n  const [formIsValid, setformIsValid] = useState(false);\r\n\r\n\tconst inputChangeHandler = (event, inputIdentifier) => {\r\n\t\tconst updatedOrderForm = {\r\n\t\t\t...dataForm\r\n\t\t};\r\n\t\tconst updatedFormElement = { \r\n\t\t\t...updatedOrderForm[inputIdentifier] \r\n\t\t};\r\n\t\tupdatedFormElement.value = event.target.value;\r\n        updatedFormElement.touched = true;\r\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\t\tupdatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n\r\n\t\tlet formIsValid = true;\r\n\t\tfor (let inputIdentifier in updatedOrderForm){\r\n            if(updatedOrderForm[inputIdentifier].value){\r\n                updatedOrderForm[inputIdentifier].valid = checkValidity(updatedOrderForm[inputIdentifier].value, updatedOrderForm[inputIdentifier].validation);\r\n            }\r\n\t\t\tformIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n\t\t}\r\n\t\tsetformIsValid(formIsValid);\r\n\t\tsetDataForm(updatedOrderForm);\r\n\r\n\t}\r\n\tconst onSubmitForm = () => {\r\n\t\tconsole.log('submit');\r\n\t\tprops.updateForm(dataForm['icon'].value,dataForm['name'].value,dataForm['intro'].value,dataForm['location'].value);\r\n        props.closed();\r\n\t}\r\n\r\n        const forElementsArray = [];\r\n        for (let key in dataForm) {\r\n            forElementsArray.push({\r\n                id:key,\r\n                config: dataForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n                <div >\r\n                     {forElementsArray.map(formElement => (\r\n                         <Input \r\n                             label={formElement.id}\r\n                             key={formElement.id}\r\n                             elementType={formElement.config.elementType}\r\n                             elementConfig={formElement.config.elementConfig}\r\n                             value={formElement.config.value? formElement.config.value : '' } \r\n                             invalid={!formElement.config.valid}\r\n                             shouldValidate={formElement.config.validation}\r\n                             touched={formElement.config.touched}\r\n                             changed={(event) => inputChangeHandler(event,formElement.id)}\r\n                            />\r\n                         ))}\r\n                      <button  className={classes.Button} onClick={onSubmitForm} disabled={!formIsValid} >Update</button>\r\n                </div>\r\n            ) ;\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t{form}\r\n\t\t    </div>\r\n\r\n      );\r\n }\r\n\r\nexport default ProfileDataForm;","import React,{useState}from 'react';\r\nimport {checkValidity} from '../../utility';\r\nimport Input from '../../component/Input/Input';\r\nimport classes from './PostForm.module.css';\r\nconst PostForm = (props) => {\r\nconst [dataForm,setDataForm] = useState({\r\n                Title: {\r\n                \telementType: 'input',\r\n                \telementConfig: {\r\n                \t\ttype: 'text',\r\n                \t\tplaceholder:\"POST TITLE\"\r\n                \t},\r\n                \tvalue: props.icon,\r\n                \tvalidation: {\r\n                \t\trequired: true\r\n                \t},\r\n                \tvalid: false,\r\n                \ttouched: false\r\n                },\r\n                Content: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'textarea',\r\n                        placeholder:\"POST CONTENT\"\r\n                    },\r\n                    value: props.name,\r\n                    validation: {\r\n                        required: true,\r\n                        maxLength: 200\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                }\r\n\t\t});\r\nconst [formIsValid, setformIsValid] = useState(false);\r\n\tconst inputChangeHandler = (event, inputIdentifier) => {\r\n\t\tconst updatedOrderForm = {\r\n\t\t\t...dataForm\r\n\t\t};\r\n\t\tconst updatedFormElement = { \r\n\t\t\t...updatedOrderForm[inputIdentifier] \r\n\t\t};\r\n\t\tupdatedFormElement.value = event.target.value;\r\n        updatedFormElement.touched = true;\r\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\t\tupdatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n\r\n\t\tlet formIsValid = true;\r\n\t\tfor (let inputIdentifier in updatedOrderForm){\r\n            if(updatedOrderForm[inputIdentifier].value){\r\n                updatedOrderForm[inputIdentifier].valid = checkValidity(updatedOrderForm[inputIdentifier].value, updatedOrderForm[inputIdentifier].validation);\r\n            }\r\n\t\t\tformIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n\t\t}\r\n\t\tsetformIsValid(formIsValid);\r\n\t\tsetDataForm(updatedOrderForm);\r\n\r\n\t}\r\n\tconst onSubmitForm = () => {\r\n\t\tconsole.log('submit');\r\n\t\tprops.updateForm(dataForm['Title'].value,dataForm['Content'].value, new Date().toLocaleString());\r\n        props.closed();\r\n\t}\r\n\r\n        const forElementsArray = [];\r\n        for (let key in dataForm) {\r\n            forElementsArray.push({\r\n                id:key,\r\n                config: dataForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n                <div >\r\n                     {forElementsArray.map(formElement => (\r\n                         <Input \r\n                             label={formElement.id}\r\n                             key={formElement.id}\r\n                             elementType={formElement.config.elementType}\r\n                             elementConfig={formElement.config.elementConfig}\r\n                             value={formElement.config.value? formElement.config.value : '' } \r\n                             invalid={!formElement.config.valid}\r\n                             shouldValidate={formElement.config.validation}\r\n                             touched={formElement.config.touched}\r\n                             changed={(event) => inputChangeHandler(event,formElement.id)}\r\n                            />\r\n                         ))}\r\n                      <button className={classes.Button} onClick={onSubmitForm} disabled={!formIsValid} >Update</button>\r\n                </div>\r\n            ) ;\r\n\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{form}\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default PostForm;","import React,{useEffect} from 'react';\r\nimport classes from './SearchForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {requestUsers,setSearchField} from '../../store/action/users'\r\nconst searchForm = (props) => {\r\n\r\n\r\nuseEffect(()=>{\r\n  props.onRequestUsers();\r\n\r\n},[])\r\nconst filterRobots =  props.users.filter(robot =>{\r\n      return robot.username.toLowerCase().includes(props.searchField.toLowerCase());\r\n    })\r\nconsole.log(filterRobots);\r\n\r\nconst form= <div> \r\n    <div className={classes.cardList}>\r\n      {  \r\n        filterRobots.map((user,i) => {\r\n          return (\r\n        \r\n            <div className={classes.card}\r\n               key={i} \r\n              onClick={()=>props.onCardClicked(filterRobots[i].username,filterRobots[i].name,filterRobots[i].email,filterRobots[i].id)}\r\n             >\r\n           \r\n             <img src = {`https://robohash.org/${filterRobots[i].username}`} alt='avatar' />\r\n             <br/>\r\n             {filterRobots[i].username}\r\n             </div>\r\n             \r\n           );\r\n        })\r\n      }  \r\n      </div>\r\n    </div>\r\n\r\nreturn (\r\n\t<div>\r\n\t<div className={classes.searchForm}>\r\n\t\t<input type='text' value={props.searchField} placeholder='keywords' onChange={(event)=>props.onSearchChange(event)}/>\r\n    </div>\r\n    {form}\r\n    </div>\r\n      );\r\n }\r\n\r\nconst mapStateToPrpos = (state) => {\r\n  return {\r\n    searchField: state.user.searchField,\r\n    users: state.user.robots,\r\n    isPending: state.user.isPending,\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestUsers: () => dispatch(requestUsers())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPrpos,mapDispatchToProps)(searchForm);","import { CHANGE_SEARCH_FIELD,\r\n\t\t REQUEST_USERS_PENDING,\r\n\t\t REQUEST_USERS_SUCCESS,\r\n\t\t REQUEST_USERS_FAILED,\r\n\t\t REQUEST_POSTS_PENDING,\r\n\t\t REQUEST_POSTS_SUCCESS,\r\n\t\t REQUEST_POSTS_FAILED,\r\n\t\t UPDATE_POSTS\r\n\r\n} from '../action/actionType' \r\n;\r\nexport const setSearchField = (text) =>({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})\r\n\r\nexport const requestUsers = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_USERS_PENDING });\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_USERS_SUCCESS, payload: data}))\r\n\t\t.catch(error =>dispatch({type:REQUEST_USERS_FAILED, payload:error}))\r\n}\r\n\r\nexport const requestPosts = (id) => (dispatch) => {\r\n\tdispatch({ type: REQUEST_POSTS_PENDING });\r\n\tfetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_POSTS_SUCCESS, payload: data}))\r\n\t\t.catch(error =>dispatch({type:REQUEST_POSTS_FAILED, payload:error}))\r\n\r\n}\r\n\r\nexport const updatePosts = (post) => (dispatch) =>{\r\n\tdispatch({type: UPDATE_POSTS, payload: post})\r\n}","import React, { Component } from 'react';\r\nimport ProfileNav from '../../component/profileNav/profileNav';\r\nimport Content from '../../component/Content/Content';\r\nimport Modal from '../../component/Modal/Modal';\r\nimport DataForm from '../../component/ProfileDataForm/ProfileDataForm';\r\nimport PostForm from '../../component/PostForm/PostForm';\r\nimport SreachForm from '../../component/SearchForm/SearchForm';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {requestPosts,updatePosts} from '../../store/action/users'\r\n\r\n\r\nclass Profile extends Component {\r\n\tstate = {\r\n\r\n\t\tshowModal: false,\r\n\t\tModalstyle : \"Modal ModalClosed\",\r\n\t\tProfileStyle: \"Profile ProfileOpen\",\r\n\t\tshowUpdateForm: false,\r\n\t\tshowIcon:false,\r\n\t\tshowPostForm:false,\r\n\t\tposts:[],\r\n\t\tshowSearch:true,\r\n\t\tuserIconURL :  'https://pbs.twimg.com/profile_images/1105852053493088258/keQ6njSw_400x400.jpg',\r\n\t\tuserName : '',\r\n\t\tintro: '',\r\n\t\tlocation: '',\r\n\t\twebsite: 'https://burgerbuilder-e577c.firebaseapp.com/',\r\n\t\t}\r\n\t\r\n\r\n\t\r\n\tonShowModal = () =>{\r\n\t\tthis.setState( {showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\" });\r\n\t}\r\n\tonCloseModal = () => {\r\n\t\tthis.setState( {showModal:false , Modalstyle : \"Modal ModalClosed\" ,showUpdateForm:false, showIcon:false,showPostForm:false});\r\n\t}\r\n\tonShowUpdateForm = () => {\r\n\t\tthis.setState({...this.state,showUpdateForm:true,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\"})\r\n\t}\r\n\tonCloseUpdateForm = () => {\r\n\t\tthis.setState({...this.state,showUpdateForm:false,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\", })\r\n\t}\r\n\tonShowIcon = () => {\r\n\t\tthis.setState({...this.state,showIcon:true,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\"})\r\n\t}\r\n\tonShowPostForm = () => {\r\n\t\tconsole.log(\"on onShowPostForm\");\r\n\t\tthis.setState({...this.state,showIcon:false,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\",showPostForm:true})\r\n\t}\r\n\tonShowSearchForm = () => {\r\n\t\tconsole.log(\"on show search form\");\r\n\t\tthis.setState({...this.state,showIcon:false,showModal:false,showPostForm:false,showSearch:true, Modalstyle : \"Modal ModalClosed\"})\r\n\t}\r\n\r\n\tonSubmitForm = (url,name,intro,location) => {\r\n\t\tconsole.log(url);\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tuserIconURL: url,\r\n\t\t\tuserName:name,\r\n\t\t\tintro:intro,\r\n\t\t\tlocation:location\r\n\t\t})\r\n\t}\r\n\tonSubmitNewPost = (title,content,date) =>{\r\n\t\tthis.props.onUpdatePost({title:title,body:content,date:date});\r\n\t\t// const posts =this.state.posts.slice();\r\n\t\t// this.props.posts.push({title:title,content:content,date:date});  \r\n\t\t// this.setState({...this.state,\r\n\t\t// \t\t\tposts:posts})\r\n\t\t\r\n\t} \r\n\tonCardClicked = (name,intro,location,id) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tuserName:name,\r\n\t\t\tintro:intro,\r\n\t\t\tuserIconURL:`https://robohash.org/${name}`,\r\n\t\t\tlocation:location,\r\n\t\t\tshowSearch:false\r\n\t\t})\r\n\t\tthis.props.onRequestUsers(id);\r\n\t}\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n \r\n    return (\r\n      <div className=\"Profile\">\r\n      \t   <ProfileNav  showSearch={this.state.showSearch} onShowSearchFormClicked={this.onShowSearchForm} onPostFormClick={this.onShowPostForm} onUpdateFormClick={this.onShowUpdateForm} IconUrl={this.state.userIconURL} onIconClick={this.onShowIcon}  onNewPost={this.onSubmitNewPost}/>\r\n      \t   <Modal show={this.state.showModal} style={this.state.Modalstyle} closed={()=>this.onCloseModal()}>\r\n      \t   \t\t{ this.state.showUpdateForm ? <DataForm  updateForm={this.onSubmitForm} icon={this.state.userIconURL} name={this.state.userName} intro={this.state.intro}  location= {this.state.location} website={this.state.website}  closed={()=>this.onCloseModal()} /> :null\r\n      \t   \t\t} \r\n      \t   \t\t{this.state.showIcon ? <img src={this.state.userIconURL} alt='icon' />:null}\r\n      \t   \t\t{this.state.showPostForm ? <PostForm updateForm={this.onSubmitNewPost}  closed={()=>this.onCloseModal()} />:null}\r\n      \t   </Modal>\r\n           {this.state.showSearch? <SreachForm onCardClicked={this.onCardClicked} /> : <Content name={this.state.userName} intro={this.state.intro}  location= {this.state.location} website={this.state.website} posts={this.props.posts} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToPrpos = (state) => {\r\n  return {\r\n    posts: state.user.posts,\r\n    isPending: state.user.isPending,\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestUsers: (id) => dispatch(requestPosts(id)),\r\n    onUpdatePost : (post) => dispatch(updatePosts(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPrpos,mapDispatchToProps)(Profile);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Profile from './container/Profile/Profile';\n\nimport * as actions from './store/action/index';\nimport {connect} from 'react-redux';\nclass App extends Component {\n componentDidMount(){\n \tthis.props.onTryAutoSignin();\n }\n  render() {\n    return (\n      <div className=\"App\">\n      \t<Profile />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignin: () => dispatch(actions.authCheckState())\n  }\n}\nexport default connect(null,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes  from '../action/actionType';\r\nimport {updateObject} from '../../utility';\r\nconst initialState = {\r\n\ttoken :null,\r\n\tuserId : null,\r\n\terror: null,\r\n\temail:null,\r\n\tname:null,\r\n\tloading:false\r\n\r\n};\r\nconst authStart = (state,action) =>{\r\n\treturn updateObject(state,{ \r\n\ttoken :null,\r\n\tuserId : null,\r\n\terror: null,\r\n\temail:null,\r\n\tname:null,\r\n    loading:true});\r\n}\r\n\r\nconst authSuccess = (state,action) => {\r\n\treturn updateObject(state,{ \r\n\t\ttoken: action.idToken,\r\n\t\tuserId:action.userId,\r\n\t\terror:null,\r\n\t\tloading:false\r\n\t\t\r\n\t});\r\n}\r\n\r\nconst authFail = (state,action) => {\r\n\treturn updateObject(state,{ \r\n\t\terror : action.error,\r\n\t\tloading:false\r\n\t});\r\n}\r\nconst authLogout = (state,action) => {\r\n\treturn updateObject(state,{ \r\n\t\ttoken :null,\r\n\t\tuserId : null,\r\n\t\terror: null,\r\n\t\temail:null,\r\n\t\tname:null\r\n\t});\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.AUTH_START: return authStart(state,action);\r\n\t\tcase actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\r\n\t\tcase actionTypes.AUTH_FAIL : return authFail(state,action);\r\n\t\tcase actionTypes.AUTH_LOGOUT : return authLogout(state,action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\nexport default reducer;","import { CHANGE_SEARCH_FIELD,\r\n\t\t REQUEST_USERS_PENDING,\r\n\t\t REQUEST_USERS_SUCCESS,\r\n\t\t REQUEST_USERS_FAILED,\r\n\t\t REQUEST_POSTS_PENDING,\r\n\t\t REQUEST_POSTS_SUCCESS,\r\n\t\t REQUEST_POSTS_FAILED,\r\n\t\t UPDATE_POSTS\r\n\r\n} from '../action/actionType' ;\r\n\r\nconst intialStateRobot = {\r\n\t\tisPending : false,\r\n\t\trobots : [],\r\n\t\terror : '',\r\n\t\tsearchField: '',\r\n\t\tposts : []\r\n\t}\r\n\r\n\r\n\r\nconst requestRobots = (state=intialStateRobot,action={}) =>{\r\n\tswitch(action.type){\r\n\t\tcase REQUEST_USERS_PENDING:\r\n\t\t\treturn Object.assign({},state,{isPending: true})\r\n\t\tcase REQUEST_USERS_SUCCESS:\r\n\t\t\treturn Object.assign({},state,{robots: action.payload, isPending: false})\r\n\t\tcase REQUEST_USERS_FAILED:\r\n\t\t\treturn Object.assign({},state,{error: action.payload, isPending: false})\r\n\t\tcase REQUEST_POSTS_PENDING:\r\n\t\t\treturn Object.assign({},state,{posts:'' , isPending: true})\r\n\t\tcase REQUEST_POSTS_SUCCESS:\r\n\t\t\treturn Object.assign({},state,{posts: action.payload, isPending: false})\r\n\t\tcase REQUEST_POSTS_FAILED:\r\n\t\t\treturn Object.assign({},state,{error: action.payload, isPending: false})\r\n\t\tcase  CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, {searchField:action.payload})\r\n\t\tcase UPDATE_POSTS:\r\n\t\t\t{\t\r\n\t\t\t\tconst newPosts = state.posts;\r\n\t\t\t\tnewPosts.push(action.payload);\r\n\t\t\t\treturn Object.assign({},state,{posts: newPosts, isPending: false})\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n}\r\n\r\nexport default requestRobots;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware , compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport authReducer from './store/reducer/auth';\nimport userReducer from './store/reducer/users'\n\nconst composeEnhancers =process.env.NODE_ENV ==='development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst rootReducer= combineReducers({\n\tauth : authReducer,\n\tuser : userReducer\n});\nconst store = createStore(rootReducer,\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk)\n\t\t)\n\t);\nconst app = (\n\t<Provider store={store}>\n\t\t  <App/>\n\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__32Ded\",\"Label\":\"Input_Label__GrCtG\",\"InputElement\":\"Input_InputElement__14dWf\",\"Invalid\":\"Input_Invalid__21Tnp\",\"ValidationError\":\"Input_ValidationError__35Dq2\"};"],"sourceRoot":""}