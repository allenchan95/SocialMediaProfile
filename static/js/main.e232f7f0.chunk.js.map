{"version":3,"sources":["component/Input/Input.module.css","component/PostForm/PostForm.module.css","component/ImageGallery/Image/Image.module.css","component/ImageGallery/ImageGallery.module.css","component/Spinner/Spinner.module.css","component/ProfileDataForm/ProfileDataForm.module.css","assets/images/image-upload.png","component/PostForm/ImageUpload/ImageUpload.module.css","component/Spinner/Spinner.js","store/action/auth.js","store/action/actionType.js","component/Nav/Nav.js","component/profileNav/profileNav.js","component/Content/ProfileCard/ProfileCard.js","component/Modal/Modal.js","component/ImageGallery/Image/Image.js","component/ImageGallery/ImageGallery.js","component/Content/Projects/Project.js","component/Content/Content.js","component/Input/Input.js","utility.js","component/ProfileDataForm/ProfileDataForm.js","component/PostForm/ImageUpload/ImageUpload.js","component/PostForm/PostForm.js","component/SearchForm/SearchForm.js","store/action/users.js","container/Profile/Profile.js","App.js","serviceWorker.js","store/reducer/auth.js","store/reducer/users.js","index.js","component/SearchForm/SearchForm.module.css"],"names":["module","exports","Input","Label","InputElement","Invalid","ValidationError","wrapper","Button","ImageList","Image","ImageContainer","ImageBorder","ModalImage","ImageGallery","Loader","lds-dual-ring","__webpack_require__","p","ImageFormContainer","ImageForm","ImageIcon","img","open","Form","tag","spinner","react_default","a","createElement","className","classes","authSuccess","token","userId","type","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","connect","state","auth","isAuthenticated","loading","onLogout","actions","onAuth","email","password","isSignup","authData","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","error","props","appcontainer","nav","Spinner","onClick","onSearchClicked","children","component_Nav_Nav","onShowSearchFormClicked","showSearch","src","IconUrl","alt","onIconClick","onUpdateFormClick","onPostFormClick","profileCard","name","intro","location","href","website","target","rel","modal","style","show","closed","clicked","_useState","useState","_useState2","Object","slicedToArray","showModal","setShowModal","_useState3","_useState4","iconUrl","setIconUrl","_useState5","_useState6","setStyle","ModalToggle","Modal_Modal","imageList","map","formElement","ImageGallery_Image_Image","key","config","id","Project","forElementsArray","push","title","content","split","item","index","component_ImageGallery_ImageGallery","date","Content","posts","form","Content_Projects_Project","body","ProfileCard_ProfileCard","input","inputElement","inputClasses","invalid","shouldValidate","touched","validationError","elementType","assign","join","onChange","changed","elementConfig","value","options","option","displayValue","label","updateObject","oldObject","updatedProerties","objectSpread","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","isImage","ProfileDataForm","icon","placeholder","validation","valid","dataForm","setDataForm","formIsValid","setformIsValid","event","inputIdentifier","updatedOrderForm","updatedFormElement","inputChangeHandler","console","log","updateForm","disabled","imageUpload","showForm","setShowForm","setUrl","vaild","setVaild","_useState7","_useState8","setTouched","valication","upload","PostForm","Title","setImageList","array","filter","deleteImage","ImageUpload","imageElementsArray","toLocaleString","searchField","user","users","robots","isPending","onSearchChange","payload","onRequestUsers","fetch","json","useEffect","filterRobots","robot","username","toLowerCase","includes","cardList","message","i","card","onCardClicked","concat","searchForm","searchBar","Profile","Modalstyle","ProfileStyle","showUpdateForm","showIcon","showPostForm","userIconURL","userName","onShowModal","_this","setState","onCloseModal","onShowUpdateForm","onCloseUpdateForm","onShowIcon","onShowPostForm","onShowSearchForm","onSubmitForm","onSubmitNewPost","imagelist","onUpdatePost","_this2","this","component_profileNav_profileNav","onNewPost","component_ProfileDataForm_ProfileDataForm","component_PostForm_PostForm","SearchForm","component_Content_Content","Component","requestPosts","updatePosts","App","onTryAutoSignin","container_Profile_Profile","getItem","Boolean","window","hostname","match","initialState","reducer","arguments","undefined","action","authStart","authFail","authLogout","intialStateRobot","requestRobots","newPosts","composeEnhancers","compose","rootReducer","combineReducers","authReducer","userReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e232f7f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__32Ded\",\"Label\":\"Input_Label__GrCtG\",\"InputElement\":\"Input_InputElement__14dWf\",\"Invalid\":\"Input_Invalid__21Tnp\",\"ValidationError\":\"Input_ValidationError__35Dq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PostForm_wrapper__vzYkd\",\"Button\":\"PostForm_Button__MQ79L\",\"ImageList\":\"PostForm_ImageList__3HGEO\",\"Image\":\"PostForm_Image__1c1Gs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageContainer\":\"Image_ImageContainer__YGYOW\",\"ImageBorder\":\"Image_ImageBorder__2uG-f\",\"Image\":\"Image_Image__1pfzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalImage\":\"ImageGallery_ModalImage__1w_A2\",\"ImageGallery\":\"ImageGallery_ImageGallery__2Pp9u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__29jS-\",\"lds-dual-ring\":\"Spinner_lds-dual-ring__2Jy7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ProfileDataForm_Button__X6vC1\"};","module.exports = __webpack_public_path__ + \"static/media/image-upload.83c59c46.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageFormContainer\":\"ImageUpload_ImageFormContainer__1DfrD\",\"ImageForm\":\"ImageUpload_ImageForm__3W_PZ\",\"ImageIcon\":\"ImageUpload_ImageIcon__2hNDT\",\"img\":\"ImageUpload_img__3loqt\",\"open\":\"ImageUpload_open__1XuCH\",\"Input\":\"ImageUpload_Input__1_2M3\",\"Button\":\"ImageUpload_Button__2Iswq\",\"Form\":\"ImageUpload_Form__1OiRG\",\"tag\":\"ImageUpload_tag__2LDcS\"};","import React from 'react';\n\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}></div>\n);\n\nexport default spinner;","import * as actionTypes from './actionType';\r\nimport axios from 'axios';\r\nexport const authStart = () => {\r\n\treturn{\r\n\t\ttype: actionTypes.AUTH_START\r\n\t}\r\n}\r\n\r\nexport const authSuccess = (token,userId) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_SUCCESS,\r\n\t\tidToken : token,\r\n\t\tuserId :userId\r\n\t}\r\n}\r\nexport const authFail = (error) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_FAIL,\r\n\t\terror : error\r\n\t}\r\n}\r\nexport const logout = () => {\r\n\tlocalStorage.removeItem('token');\r\n\tlocalStorage.removeItem('userId');\r\n\tlocalStorage.removeItem('expirationDate');\r\n\treturn {\r\n\t\ttype : actionTypes.AUTH_LOGOUT\r\n\t}\r\n }\r\nexport const checkAuthTimeout = (expirationTime) =>{\r\n\treturn dispatch =>\t{\r\n\t\tsetTimeout(()=>{\r\n\t\t\tdispatch(logout());\r\n\t\t}, expirationTime * 1000)\r\n\t}\r\n}\r\n\r\nexport const auth = (email,password,isSignup) => {\r\n\treturn dispatch => {\r\n\t\tdispatch(authStart());\r\n\t\tconst authData = {\r\n\t\t\temail:email,\r\n\t\t\tpassword:password,\r\n\t\t\treturnSecureToken :true,\r\n\t\t\t \r\n\t\t}\r\n\t\tlet url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAXrU6Nlxlu3jibtiCMZQ8EpvVWZGzmC3w';\r\n\t\tif(!isSignup){\r\n\t\t\turl ='https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAXrU6Nlxlu3jibtiCMZQ8EpvVWZGzmC3w'\r\n\t\t}\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date (new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token',response.data.idToken);\r\n                localStorage.setItem('userId',response.data.localId);\r\n                localStorage.setItem('expirationDate',expirationDate);\r\n               \r\n  \t\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            \tdispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\nexport const authCheckState = () =>{\r\n\treturn dispatch =>{\r\n\t\tconst token = localStorage.getItem('token');\r\n\t\tif (!token){\r\n\t\t\tdispatch(logout());\r\n\t\t}else{\r\n\t\t\tconst expirationDate = new Date( localStorage.getItem('expirationDate'));\r\n\t\t\tif (expirationDate <= new Date()){\r\n\t\t\t\tdispatch(logout());\r\n\t\t\t}else{   \t\r\n\t\t\t\tconst userId = localStorage.getItem('userId');\r\n\t\t\t\tdispatch(authSuccess(token,userId))\r\n\t\t\t\tdispatch(checkAuthTimeout( (expirationDate.getTime()- new Date().getTime() )/1000 ));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n}","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT ='AUTH_LOGOUT';\r\n\r\nexport const REQUEST_USERS_PENDING = 'REQUEST_USERS_PENDING';\r\nexport const REQUEST_USERS_SUCCESS = 'REQUEST_USERS_SUCCESS';\r\nexport const REQUEST_USERS_FAILED = 'REQUEST_USERS_FAILED';\r\n\r\nexport const REQUEST_POSTS_PENDING = 'REQUEST_POSTS_PENDING';\r\nexport const REQUEST_POSTS_SUCCESS = 'REQUEST_POSTS_SUCCESS';\r\nexport const REQUEST_POSTS_FAILED = 'REQUEST_POSTS_FAILED';\r\n\r\nexport const UPDATE_POSTS = 'UPDATE_POSTS';\r\n\r\n\r\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","import React from 'react';\r\nimport classes from './Nav.css';\r\nimport Spinner from '../../component/Spinner/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/action/index';\r\nconst Nav = (props) => {\r\nreturn (\r\n\t     \t<div className={classes.appcontainer}>\r\n\t\t          <div className={classes.nav}>\r\n\t\t\t          <ul>\r\n\t\t\t\t          {props.loading? \r\n\t\t\t\t          \t\t<Spinner />:\r\n\t\t\t\t          \t\tprops.isAuthenticated ?\r\n\t\t\t\t          \t\t \t <li onClick={()=>props.onLogout()}><div>SIGNOUT</div></li>\r\n\t\t\t\t          \t\t\t:<li onClick={()=>props.onAuth('a@gmail.com','123123',false)}><div>SIGNIN</div></li>     \t\r\n\t\t\t\t          }\r\n\t\t\t           \t <li><button className='button' onClick={props.onSearchClicked}>Search</button></li>\r\n\t\t\t          </ul>\r\n\t\t          </div>\r\n\t        \t  \t{props.children}\r\n\t\t\t </div>\r\n\r\n      );\r\n }\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttoken : state.auth.token,\r\n\t\tisAuthenticated : state.auth.token !== null,\r\n\t\tuserId :state.auth.userId,\r\n\t\tloading :state.auth.loading\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonLogout: () => dispatch(actions.logout()),\r\n\t\tonAuth: (email,password,isSignup) => dispatch(actions.auth(email,password,isSignup))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Nav);","import React from 'react';\r\nimport './profileNav.css';\r\nimport {connect} from 'react-redux';\r\nimport Nav from '../Nav/Nav';\r\nconst profileNav = (props) => {\r\n\r\nreturn (\r\n\t<div className='app-container'>\r\n\t <div className='container'>\r\n\t\t<Nav className='Nav' onSearchClicked={props.onShowSearchFormClicked}/>\r\n\t\t  <div className='bg' > \r\n\t\t  </div>\r\n\t\t \t{!props.showSearch?\r\n\t\t\t \t<nav className='nav' >\r\n\t\t\t          <div className='icon-container'><img className='icon' src={props.IconUrl} alt='icon' onClick={props.onIconClick}/></div>\r\n\t\t\t          <div className='profileNav'>\r\n\t\t          {props.isAuthenticated? \r\n\t\t          \t<ul>\r\n\t\t\t           <li onClick={props.onUpdateFormClick}><p>UPDATE PROFILE</p></li>\r\n\t\t\t           <li onClick={props.onPostFormClick}><p>NEW POST</p></li>\r\n\t\t            </ul>\r\n\t\t            :null\r\n\t          \t}\r\n\t          </div>\r\n\t        </nav>:null}\r\n\r\n        </div>\r\n    </div>\r\n\r\n      );\r\n }\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\t\r\n\t\tisAuthenticated : state.auth.token !== null,\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(profileNav);","import React from 'react';\r\nimport './ProfileCard.css';\r\n const profileCard = (props) => {\r\n \treturn(\r\n \t\t<div className='card'>\r\n \t\t\t<div className='name'>{props.name}</div>\r\n \t\t\t<div className=\"tag\">{props.intro}</div>\r\n \t\t\t<div className=\"tag\">{props.location}</div>\r\n \t\t\t<div className=\"tag\"><a href={props.website} target='_blank'  rel=\"noopener noreferrer\">@{props.name}</a></div>\r\n \t\t\t<div className=\"tag\">Joined May 2009</div>\r\n \t\t</div>\r\n \t\t)\r\n }\r\n\r\n export default profileCard;","import React from \"react\";\r\nimport  \"./Modal.css\";\r\n\r\n\r\n\r\nconst modal = props => {\r\n  return (\r\n    <div >\r\n          <div className={props.style}>\r\n           { props.children }\r\n          </div>\r\n            {props.show ? <div className=\"Backdrop\" onClick={props.closed} /> : null\r\n            }\r\n         \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default modal;\r\n\r\n","import React from 'react';\r\nimport classes from './Image.module.css';\r\n\r\nconst Image = (props) => {\r\n\t\r\n\treturn(\r\n\t\t<div className={classes.ImageContainer}>\r\n\t\t\t<div className={classes.ImageBorder}>\r\n\t\t\t\t<img className={classes.Image} src={props.url} alt='userImage' onClick={props.clicked}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Image;","import React,{useState} from 'react';\r\nimport classes from './ImageGallery.module.css';\r\n\r\nimport Modal from '../Modal/Modal';\r\nimport Image from './Image/Image';\r\nconst ImageGallery = (props) => {\r\n\tconst [showModal,setShowModal] = useState(false);\r\n\tconst [iconUrl,setIconUrl] = useState('');\r\n\tconst [style,setStyle] = useState('Modal ModalClosed');\r\n\tconst ModalToggle = (url) => {\r\n\t\tif (style === 'Modal ModalClosed' ){\r\n\t\t\tsetStyle('Modal ModalOpen')\r\n\t\t}else{\r\n\t\t\tsetStyle('Modal ModalClosed')\r\n\t\t}\r\n\t\tsetIconUrl(url);\r\n\t\tsetShowModal(!showModal);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\t\t\r\n\t\t\t<Modal style={style} show={showModal} closed={()=>ModalToggle(iconUrl)}>\r\n\t\t\t\t{showModal ? <img className={classes.ModalImage}src={iconUrl} alt='icon' />:null}\r\n\t\t\t</Modal>\r\n\t\t\t<div className={classes.ImageGallery}>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.imageList.map(formElement => (\r\n                        \r\n                           \t\t <Image key={formElement.config.id} url={formElement.config.url} clicked={()=>ModalToggle(formElement.config.url)} />\r\n                           \r\n                         ))\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default ImageGallery;","import React from 'react';\r\nimport './Project.css';\r\nimport ImageGallery from '../../ImageGallery/ImageGallery';\r\n const Project = (props) => {\r\n \t   const forElementsArray = [];\r\n        for (let key in props.imageList) {\r\n            forElementsArray.push({\r\n                id:key,\r\n                config: props.imageList[key]\r\n            });\r\n        }\r\n \treturn(\r\n \t\t<div className='Project'>\r\n \t\t\t<h3>{props.title}</h3>\r\n \t\t\t<div className='content-body'>\r\n\r\n \t\t\t  <p>\r\n \t\t\t\r\n              {props.content.split('\\n').map(function(item,index) {\r\n                  return (\r\n                    <span key={index}>\r\n                      {item}\r\n                      <br/>\r\n                    </span>\r\n                  )\r\n                })} </p>\r\n \t\t\t    <div className='ImageList'>\r\n             <ImageGallery imageList={forElementsArray} />\r\n \t\t\t    </div>\r\n \t\t\t  <div className='date'>{props.date} </div>\r\n \t\t\t</div>\r\n \t\t</div>\r\n \t\r\n \t\t)\r\n }\r\n\r\n export default Project;","import React from 'react';\r\nimport ProfileCard from './ProfileCard/ProfileCard';\r\nimport Projects from './Projects/Project';\r\nimport './Content.css';\r\n const Content = (props) => {\r\n \t    const forElementsArray = [];\r\n        for (let key in props.posts) {\r\n            forElementsArray.push({\r\n                id:key,\r\n                config: props.posts[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n                <div className='item2'>\r\n                     {forElementsArray.map(formElement => (\r\n                        <Projects\r\n                             key={formElement.id}\r\n                             title={formElement.config.title}\r\n                             content={formElement.config.body}\r\n                             date={formElement.config.date}\r\n                             imageList={formElement.config.imageList}\r\n                            />\r\n                         ))}\r\n                  \r\n                </div>\r\n            ) ;\r\n\r\n\r\n \treturn(\r\n \t\t<div className='grid-container'>\r\n \t\t\t<div className='item1'>\r\n\t \t\t\t<ProfileCard \r\n\t \t\t\tname={props.name} \r\n\t \t\t\tintro={props.intro}\r\n\t \t\t\tlocation={props.location}\r\n\t \t\t\twebsite={props.website} \r\n\t \t\t\t/>\r\n \t\t\t</div>\r\n \t\t\t{form}\r\n \r\n \t\t</div>\r\n \t\t)\r\n }\r\n\r\n export default Content;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\nconst input = (props) => {\r\n\tlet inputElement = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t}\r\n\tlet validationError = null;\r\n\tif (props.invalid && props.touched) {\r\n\t    validationError = <p className={classes.ValidationError} >Please enter a valid value!</p>;\r\n\t}\r\n\r\n\tswitch (props.elementType){\r\n\t\tcase ('input'):\r\n\t\t\tinputElement = <input className={inputClasses.join(' ')} onChange={props.changed}{...props.elementConfig} value={props.value}/>;\r\n\t\t\tbreak;\r\n\t\tcase ('textarea'):\r\n\t\t\tinputElement = <textarea className={inputClasses.join(' ')} onChange={props.changed} {...props.elementConfig} value={props.value} />;\r\n\t\t\tbreak;\r\n\t\tcase ('select'):\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select \r\n\t\t\t\t\tclassName={inputClasses.join(' ')}  onChange={props.changed}\r\n\t\t\t \t\tvalue={props.value}>\r\n\t\t\t \t\t{props.elementConfig.options.map(option => (\r\n\t\t\t \t\t\t<option key={option.value} value={option.value}>{option.displayValue}</option>\r\n\t\t\t \t\t\t))}\r\n\t\t\t\t</select>);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = <input className={inputClasses.join(' ')} onChange={props.changed}{...props.elementConfig} value={props.value} />;\r\n\t}\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<label className={classes.Label}>{props.label}</label>\r\n\t\t\t{inputElement}\r\n\t\t\t{validationError}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default input;","export const updateObject = (oldObject, updatedProerties) => {\r\n\treturn{\r\n\t\t...oldObject,\r\n\t\t...updatedProerties\r\n\t}\r\n}\r\n\r\n\r\nexport const  checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isImage) {\r\n            const pattern = /\\.(jpg|png|gif)/ ;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n","import React,{useState} from 'react';\r\nimport Input from '../Input/Input';\r\nimport classes from './ProfileDataForm.module.css';\r\nimport {checkValidity} from '../../utility';\r\nconst ProfileDataForm = (props) => {\r\n  const [dataForm,setDataForm] = useState({\r\n                icon: {\r\n                \telementType: 'input',\r\n                \telementConfig: {\r\n                \t\ttype: 'text',\r\n                \t\tplaceholder:\"Your Icon\"\r\n                \t},\r\n                \tvalue: props.icon,\r\n                \tvalidation: {\r\n                \t\trequired: true,\r\n                \t\tisImage: false\r\n                       \r\n                \t},\r\n                \tvalid: false,\r\n                \ttouched: false\r\n                },\r\n                    name: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:\"Your Name\"\r\n                    },\r\n                    value: props.name,\r\n                    validation: {\r\n                        required: true,\r\n                        minLength:4\r\n                       \r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                    intro: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:\"Your Introduction\"\r\n                    },\r\n                    value: props.intro,\r\n                    validation: {\r\n                        required: true,\r\n                        maxLength: 100\r\n                       \r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n                location: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder:\"Your Location\"\r\n                    },\r\n                    value: props.location,\r\n                    validation: {\r\n                        required: true\r\n                       \r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                },\r\n\r\n\t\t});\r\n  const [formIsValid, setformIsValid] = useState(false);\r\n\r\n\tconst inputChangeHandler = (event, inputIdentifier) => {\r\n\t\tconst updatedOrderForm = {\r\n\t\t\t...dataForm\r\n\t\t};\r\n\t\tconst updatedFormElement = { \r\n\t\t\t...updatedOrderForm[inputIdentifier] \r\n\t\t};\r\n\t\tupdatedFormElement.value = event.target.value;\r\n        updatedFormElement.touched = true;\r\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\t\tupdatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n\r\n\t\tlet formIsValid = true;\r\n\t\tfor (let inputIdentifier in updatedOrderForm){\r\n            if(updatedOrderForm[inputIdentifier].value){\r\n                updatedOrderForm[inputIdentifier].valid = checkValidity(updatedOrderForm[inputIdentifier].value, updatedOrderForm[inputIdentifier].validation);\r\n            }\r\n\t\t\tformIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n\t\t}\r\n\t\tsetformIsValid(formIsValid);\r\n\t\tsetDataForm(updatedOrderForm);\r\n\r\n\t}\r\n\tconst onSubmitForm = () => {\r\n\t\tconsole.log('submit');\r\n\t\tprops.updateForm(dataForm['icon'].value,dataForm['name'].value,dataForm['intro'].value,dataForm['location'].value);\r\n        props.closed();\r\n\t}\r\n\r\n        const forElementsArray = [];\r\n        for (let key in dataForm) {\r\n            forElementsArray.push({\r\n                id:key,\r\n                config: dataForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n                <div >\r\n                     {forElementsArray.map(formElement => (\r\n                         <Input \r\n                             label={formElement.id}\r\n                             key={formElement.id}\r\n                             elementType={formElement.config.elementType}\r\n                             elementConfig={formElement.config.elementConfig}\r\n                             value={formElement.config.value? formElement.config.value : '' } \r\n                             invalid={!formElement.config.valid}\r\n                             shouldValidate={formElement.config.validation}\r\n                             touched={formElement.config.touched}\r\n                             changed={(event) => inputChangeHandler(event,formElement.id)}\r\n                            />\r\n                         ))}\r\n                      <button  className={classes.Button} onClick={onSubmitForm} disabled={!formIsValid} >Update</button>\r\n                </div>\r\n            ) ;\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t{form}\r\n\t\t    </div>\r\n\r\n      );\r\n }\r\n\r\nexport default ProfileDataForm;","import React,{useState} from 'react';\r\nimport classes from './ImageUpload.module.css';\r\nimport icon from '../../../assets/images/image-upload.png';\r\nimport {checkValidity} from '../../../utility';\r\n\r\nconst imageUpload = (props) =>{\r\n\tconst [showForm,setShowForm] = useState(false);\r\n\tconst [url,setUrl] = useState('');\r\n\tconst [vaild,setVaild] = useState(false);\r\n\tconst [touched,setTouched] = useState(false);\r\n\tconst onImageClick = () => {\r\n\t\tsetShowForm(!showForm);\r\n\t\tsetTouched(false);\r\n\t\tsetVaild(false);\r\n\t}\r\n\tconst onOkayButtonClick = () => {\r\n\t\tprops.upload('sadas',url);\r\n\t\tsetShowForm(!showForm);\r\n\t\tsetTouched(false);\r\n\t\tsetVaild(false);\r\n\t\tconsole.log(url);\r\n\t}\r\n\tconst onInputChange = (event) => {\r\n\t\tconst valication = checkValidity(event.target.value, {isImage:true});\r\n\t\tsetTouched(true);\r\n\t\tsetVaild(valication);\r\n\t\tsetUrl(event.target.value);\r\n\r\n\t}\r\n\r\n\tconst form = <div className={classes.ImageForm}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{ showForm?\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input className={classes.Input} type='text' placeholder='YOUR IMAGE URL HERE' onChange={onInputChange}  />\r\n\t\t\t\t\t\t\t\t<button className={classes.Button} disabled={!vaild} onClick={onOkayButtonClick}>OKAY</button>\r\n\t\t\t\t\t\t\t\t{ !vaild && touched ? \r\n\t\t\t\t\t\t\t\t\t<div className={classes.tag}>PLEASE ENTER VAILD IMAGE URL </div>\r\n\t\t\t\t\t\t\t\t\t:null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:<div className={classes.ImageIcon}><img className={classes.img} src={icon} alt='icon' onClick={onImageClick}/>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t </div>\r\n\treturn(\r\n\t\t<div className={classes.ImageFormContainer}>\r\n\t\t\t{form}\r\n\t\t\t\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default imageUpload;","import React,{useState}from 'react';\r\nimport {checkValidity} from '../../utility';\r\nimport Input from '../../component/Input/Input';\r\nimport classes from './PostForm.module.css';\r\nimport ImageUpload from './ImageUpload/ImageUpload';\r\nconst PostForm = (props) => {\r\nconst [dataForm,setDataForm] = useState({\r\n                Title: {\r\n                \telementType: 'input',\r\n                \telementConfig: {\r\n                \t\ttype: 'text',\r\n                \t\tplaceholder:\"POST TITLE\"\r\n                \t},\r\n                \tvalue: props.icon,\r\n                \tvalidation: {\r\n                \t\trequired: true\r\n                \t},\r\n                \tvalid: false,\r\n                \ttouched: false\r\n                },\r\n                Content: {\r\n                    elementType: 'textarea',\r\n                    elementConfig: {\r\n                        type: 'textarea',\r\n                        placeholder:\"POST CONTENT\"\r\n                    },\r\n                    value: props.name,\r\n                    validation: {\r\n                        required: true,\r\n                        maxLength: 200\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                }\r\n\t\t});\r\nconst [formIsValid, setformIsValid] = useState(false);\r\n\tconst inputChangeHandler = (event, inputIdentifier) => {\r\n\t\tconst updatedOrderForm = {\r\n\t\t\t...dataForm\r\n\t\t};\r\n\t\tconst updatedFormElement = { \r\n\t\t\t...updatedOrderForm[inputIdentifier] \r\n\t\t};\r\n\t\tupdatedFormElement.value = event.target.value;\r\n        updatedFormElement.touched = true;\r\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\t\tupdatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n\r\n\t\tlet formIsValid = true;\r\n\t\tfor (let inputIdentifier in updatedOrderForm){\r\n            if(updatedOrderForm[inputIdentifier].value){\r\n                updatedOrderForm[inputIdentifier].valid = checkValidity(updatedOrderForm[inputIdentifier].value, updatedOrderForm[inputIdentifier].validation);\r\n            }\r\n\t\t\tformIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n\t\t}\r\n\t\tsetformIsValid(formIsValid);\r\n\t\tsetDataForm(updatedOrderForm);\r\n\r\n\t}\r\nconst [imageList,setImageList] = useState([]);\r\n    const onUploadImage = (key,url) =>{\r\n        const imageElementsArray = [];\r\n         for (let index in imageList){\r\n                imageElementsArray.push({\r\n                    id:index,\r\n                    url: imageList[index].url\r\n                })\r\n    }\r\n        imageElementsArray.push({\r\n            id:key,\r\n            url:url\r\n        })\r\n        setImageList(imageElementsArray);\r\n       \r\n    }\r\n    const deleteImage = (index) =>{\r\n       const  value = imageList[index];\r\n    \r\n       let array =  imageList.filter(item => item !== value)\r\n       setImageList(array);\r\n    }\r\n\r\n\r\n\r\n\tconst onSubmitForm = () => {\r\n\t\tconsole.log('submit');\r\n\t\tprops.updateForm(dataForm['Title'].value,dataForm['Content'].value, new Date().toLocaleString(),imageList);\r\n        props.closed();\r\n\t}\r\n\r\n        const forElementsArray = [];\r\n        for (let key in dataForm) {\r\n            forElementsArray.push({\r\n                id:key,\r\n                config: dataForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n                <div  className={classes.wrapper}>\r\n                     {forElementsArray.map(formElement => (\r\n                         <Input \r\n                             label={formElement.id}\r\n                             key={formElement.id}\r\n                             elementType={formElement.config.elementType}\r\n                             elementConfig={formElement.config.elementConfig}\r\n                             value={formElement.config.value? formElement.config.value : '' } \r\n                             invalid={!formElement.config.valid}\r\n                             shouldValidate={formElement.config.validation}\r\n                             touched={formElement.config.touched}\r\n                             changed={(event) => inputChangeHandler(event,formElement.id)}\r\n                            />\r\n                         ))}\r\n                     <div className={classes.ImageList}>\r\n                         {imageList.map((formElement,index) => (\r\n                            <div  onClick={()=>{deleteImage(index)}} key={formElement.id} className={classes.Image} > <img src={formElement.url}  alt='uploaded'/></div>\r\n                         ))\r\n                     }\r\n                     \r\n                       </div>\r\n                      <ImageUpload  upload={onUploadImage}/>\r\n\r\n                      <button className={classes.Button} onClick={onSubmitForm} disabled={!formIsValid} >Update</button>\r\n                </div>\r\n            ) ;\r\n\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{form}\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default PostForm;","import React,{useEffect} from 'react';\r\nimport classes from './SearchForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {requestUsers,setSearchField} from '../../store/action/users'\r\nconst searchForm = (props) => {\r\n\r\nuseEffect(()=>{\r\n  props.onRequestUsers();\r\n\r\n},[])\r\nconst filterRobots =  props.users.filter(robot =>{\r\n      return robot.username.toLowerCase().includes(props.searchField.toLowerCase());\r\n    })\r\n\r\nconst form= <div> \r\n                <div className={classes.cardList}>\r\n                 {filterRobots.length > 0 ? null: <div className={classes.message}>NO RESULTS FOUND</div>}\r\n                  {  \r\n                    filterRobots.map((user,i) => {\r\n                      return (\r\n                    \r\n                        <div className={classes.card}\r\n                           key={i} \r\n                          onClick={()=>props.onCardClicked(filterRobots[i].username,filterRobots[i].name,filterRobots[i].email,filterRobots[i].id)}\r\n                         >\r\n                       \r\n                         <img src = {`https://robohash.org/${filterRobots[i].username}`} alt='avatar' />\r\n                         <br/>\r\n                         {filterRobots[i].username}\r\n                         </div>\r\n                         \r\n                       );\r\n                    })\r\n                  }  \r\n\r\n                  </div>\r\n          </div>\r\n\r\nreturn (\r\n\t<div>\r\n\t<div className={classes.searchForm}>\r\n\t\t<input className={classes.searchBar} type='text' value={props.searchField} placeholder='keywords' onChange={(event)=>props.onSearchChange(event)}/>\r\n    </div>\r\n      {form}\r\n      \r\n    </div>\r\n      );\r\n }\r\n\r\nconst mapStateToPrpos = (state) => {\r\n  return {\r\n    searchField: state.user.searchField,\r\n    users: state.user.robots,\r\n    isPending: state.user.isPending,\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestUsers: () => dispatch(requestUsers())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPrpos,mapDispatchToProps)(searchForm);","import { CHANGE_SEARCH_FIELD,\r\n\t\t REQUEST_USERS_PENDING,\r\n\t\t REQUEST_USERS_SUCCESS,\r\n\t\t REQUEST_USERS_FAILED,\r\n\t\t REQUEST_POSTS_PENDING,\r\n\t\t REQUEST_POSTS_SUCCESS,\r\n\t\t REQUEST_POSTS_FAILED,\r\n\t\t UPDATE_POSTS\r\n\r\n} from '../action/actionType' \r\n;\r\nexport const setSearchField = (text) =>({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})\r\n\r\nexport const requestUsers = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_USERS_PENDING });\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_USERS_SUCCESS, payload: data}))\r\n\t\t.catch(error =>dispatch({type:REQUEST_USERS_FAILED, payload:error}))\r\n}\r\n\r\nexport const requestPosts = (id) => (dispatch) => {\r\n\tdispatch({ type: REQUEST_POSTS_PENDING });\r\n\tfetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_POSTS_SUCCESS, payload: data}))\r\n\t\t.catch(error =>dispatch({type:REQUEST_POSTS_FAILED, payload:error}))\r\n\r\n}\r\n\r\nexport const updatePosts = (post) => (dispatch) =>{\r\n\tdispatch({type: UPDATE_POSTS, payload: post})\r\n}","import React, { Component } from 'react';\r\nimport ProfileNav from '../../component/profileNav/profileNav';\r\nimport Content from '../../component/Content/Content';\r\nimport Modal from '../../component/Modal/Modal';\r\nimport DataForm from '../../component/ProfileDataForm/ProfileDataForm';\r\nimport PostForm from '../../component/PostForm/PostForm';\r\nimport SreachForm from '../../component/SearchForm/SearchForm';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {requestPosts,updatePosts} from '../../store/action/users'\r\n\r\n\r\nclass Profile extends Component {\r\n\tstate = {\r\n\r\n\t\tshowModal: false,\r\n\t\tModalstyle : \"Modal ModalClosed\",\r\n\t\tProfileStyle: \"Profile ProfileOpen\",\r\n\t\tshowUpdateForm: false,\r\n\t\tshowIcon:false,\r\n\t\tshowPostForm:false,\r\n\t\tposts:[],\r\n\t\tshowSearch:true,\r\n\t\tuserIconURL :  'https://pbs.twimg.com/profile_images/1105852053493088258/keQ6njSw_400x400.jpg',\r\n\t\tuserName : '',\r\n\t\tintro: '',\r\n\t\tlocation: '',\r\n\t\twebsite: 'https://burgerbuilder-e577c.firebaseapp.com/',\r\n\t\t}\r\n\t\r\n\r\n\t\r\n\tonShowModal = () =>{\r\n\t\tthis.setState( {showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\" });\r\n\t}\r\n\tonCloseModal = () => {\r\n\t\tthis.setState( {showModal:false , Modalstyle : \"Modal ModalClosed\" ,showUpdateForm:false, showIcon:false,showPostForm:false});\r\n\t}\r\n\tonShowUpdateForm = () => {\r\n\t\tthis.setState({...this.state,showUpdateForm:true,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\"})\r\n\t}\r\n\tonCloseUpdateForm = () => {\r\n\t\tthis.setState({...this.state,showUpdateForm:false,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\", })\r\n\t}\r\n\tonShowIcon = () => {\r\n\t\tthis.setState({...this.state,showIcon:true,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\"})\r\n\t}\r\n\tonShowPostForm = () => {\r\n\t\tconsole.log(\"on onShowPostForm\");\r\n\t\tthis.setState({...this.state,showIcon:false,showModal:!this.state.showModal, Modalstyle : \"Modal ModalOpen\",showPostForm:true})\r\n\t}\r\n\tonShowSearchForm = () => {\r\n\t\tconsole.log(\"on show search form\");\r\n\t\tthis.setState({...this.state,showIcon:false,showModal:false,showPostForm:false,showSearch:true, Modalstyle : \"Modal ModalClosed\"})\r\n\t}\r\n\r\n\tonSubmitForm = (url,name,intro,location) => {\r\n\t\tconsole.log(url);\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tuserIconURL: url,\r\n\t\t\tuserName:name,\r\n\t\t\tintro:intro,\r\n\t\t\tlocation:location\r\n\t\t})\r\n\t}\r\n\tonSubmitNewPost = (title,content,date,imagelist) =>{\r\n\t\tthis.props.onUpdatePost({title:title,body:content,date:date,imageList:imagelist});\r\n\t\t// const posts =this.state.posts.slice();\r\n\t\t// this.props.posts.push({title:title,content:content,date:date});  \r\n\t\t// this.setState({...this.state,\r\n\t\t// \t\t\tposts:posts})\r\n\t\t\r\n\t} \r\n\tonCardClicked = (name,intro,location,id) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tuserName:name,\r\n\t\t\tintro:intro,\r\n\t\t\tuserIconURL:`https://robohash.org/${name}`,\r\n\t\t\tlocation:location,\r\n\t\t\tshowSearch:false\r\n\t\t})\r\n\t\tthis.props.onRequestUsers(id);\r\n\t}\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n \r\n    return (\r\n      <div className=\"Profile\">\r\n      \t   <ProfileNav  showSearch={this.state.showSearch} onShowSearchFormClicked={this.onShowSearchForm} onPostFormClick={this.onShowPostForm} onUpdateFormClick={this.onShowUpdateForm} IconUrl={this.state.userIconURL} onIconClick={this.onShowIcon}  onNewPost={this.onSubmitNewPost}/>\r\n      \t   <Modal show={this.state.showModal} style={this.state.Modalstyle} closed={()=>this.onCloseModal()}>\r\n      \t   \t\t{ this.state.showUpdateForm ? <DataForm  updateForm={this.onSubmitForm} icon={this.state.userIconURL} name={this.state.userName} intro={this.state.intro}  location= {this.state.location} website={this.state.website}  closed={()=>this.onCloseModal()} /> :null\r\n      \t   \t\t} \r\n      \t   \t\t{this.state.showIcon ? <img src={this.state.userIconURL} alt='icon' />:null}\r\n      \t   \t\t{this.state.showPostForm ? <PostForm updateForm={this.onSubmitNewPost}  closed={()=>this.onCloseModal()} />:null}\r\n      \t   </Modal>\r\n           {this.state.showSearch? <SreachForm onCardClicked={this.onCardClicked} /> : <Content name={this.state.userName} intro={this.state.intro}  location= {this.state.location} website={this.state.website} posts={this.props.posts} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToPrpos = (state) => {\r\n  return {\r\n    posts: state.user.posts,\r\n    error: state.user.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRequestUsers: (id) => dispatch(requestPosts(id)),\r\n    onUpdatePost : (post) => dispatch(updatePosts(post))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToPrpos,mapDispatchToProps)(Profile);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Profile from './container/Profile/Profile';\n\nimport * as actions from './store/action/index';\nimport {connect} from 'react-redux';\nclass App extends Component {\n componentDidMount(){\n \tthis.props.onTryAutoSignin();\n }\n  render() {\n    return (\n      <div className=\"App\">\n      \t<Profile />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignin: () => dispatch(actions.authCheckState())\n  }\n}\nexport default connect(null,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes  from '../action/actionType';\r\nimport {updateObject} from '../../utility';\r\nconst initialState = {\r\n\ttoken :null,\r\n\tuserId : null,\r\n\terror: null,\r\n\temail:null,\r\n\tname:null,\r\n\tloading:false\r\n\r\n};\r\nconst authStart = (state,action) =>{\r\n\treturn updateObject(state,{ \r\n\ttoken :null,\r\n\tuserId : null,\r\n\terror: null,\r\n\temail:null,\r\n\tname:null,\r\n    loading:true});\r\n}\r\n\r\nconst authSuccess = (state,action) => {\r\n\treturn updateObject(state,{ \r\n\t\ttoken: action.idToken,\r\n\t\tuserId:action.userId,\r\n\t\terror:null,\r\n\t\tloading:false\r\n\t\t\r\n\t});\r\n}\r\n\r\nconst authFail = (state,action) => {\r\n\treturn updateObject(state,{ \r\n\t\terror : action.error,\r\n\t\tloading:false\r\n\t});\r\n}\r\nconst authLogout = (state,action) => {\r\n\treturn updateObject(state,{ \r\n\t\ttoken :null,\r\n\t\tuserId : null,\r\n\t\terror: null,\r\n\t\temail:null,\r\n\t\tname:null\r\n\t});\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.AUTH_START: return authStart(state,action);\r\n\t\tcase actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\r\n\t\tcase actionTypes.AUTH_FAIL : return authFail(state,action);\r\n\t\tcase actionTypes.AUTH_LOGOUT : return authLogout(state,action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\nexport default reducer;","import { CHANGE_SEARCH_FIELD,\r\n\t\t REQUEST_USERS_PENDING,\r\n\t\t REQUEST_USERS_SUCCESS,\r\n\t\t REQUEST_USERS_FAILED,\r\n\t\t REQUEST_POSTS_PENDING,\r\n\t\t REQUEST_POSTS_SUCCESS,\r\n\t\t REQUEST_POSTS_FAILED,\r\n\t\t UPDATE_POSTS\r\n\r\n} from '../action/actionType' ;\r\n\r\nconst intialStateRobot = {\r\n\t\tisPending : false,\r\n\t\trobots : [],\r\n\t\terror : '',\r\n\t\tsearchField: '',\r\n\t\tposts : []\r\n\t}\r\n\r\n\r\n\r\nconst requestRobots = (state=intialStateRobot,action={}) =>{\r\n\tswitch(action.type){\r\n\t\tcase REQUEST_USERS_PENDING:\r\n\t\t\treturn Object.assign({},state,{isPending: true})\r\n\t\tcase REQUEST_USERS_SUCCESS:\r\n\t\t\treturn Object.assign({},state,{robots: action.payload, isPending: false})\r\n\t\tcase REQUEST_USERS_FAILED:\r\n\t\t\treturn Object.assign({},state,{error: action.payload, isPending: false})\r\n\t\tcase REQUEST_POSTS_PENDING:\r\n\t\t\treturn Object.assign({},state,{posts:'' , isPending: true})\r\n\t\tcase REQUEST_POSTS_SUCCESS:\r\n\t\t\treturn Object.assign({},state,{posts: action.payload, isPending: false})\r\n\t\tcase REQUEST_POSTS_FAILED:\r\n\t\t\treturn Object.assign({},state,{error: action.payload, isPending: false})\r\n\t\tcase  CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, {searchField:action.payload})\r\n\t\tcase UPDATE_POSTS:\r\n\t\t\t{\t\r\n\t\t\t\tconst newPosts = state.posts;\r\n\t\t\t\tnewPosts.push(action.payload);\r\n\t\t\t\treturn Object.assign({},state,{posts: newPosts, isPending: false})\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n}\r\n\r\nexport default requestRobots;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware , compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport authReducer from './store/reducer/auth';\nimport userReducer from './store/reducer/users'\n\nconst composeEnhancers =process.env.NODE_ENV ==='development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst rootReducer= combineReducers({\n\tauth : authReducer,\n\tuser : userReducer\n});\nconst store = createStore(rootReducer,\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk)\n\t\t)\n\t);\nconst app = (\n\t<Provider store={store}>\n\t\t  <App />\n\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__2LIzA\",\"searchBar\":\"SearchForm_searchBar__1p90T\",\"cardList\":\"SearchForm_cardList__1sGSd\",\"card\":\"SearchForm_card__KaDoO\",\"message\":\"SearchForm_message__1sW7k\"};"],"sourceRoot":""}